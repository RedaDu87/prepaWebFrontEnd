{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/enum/header-type.enum.ts","./src/app/enum/notification-type.enum.ts","./src/app/enum/role.enum.ts","./src/app/guard/authentication.guard.ts","./src/app/interceptor/auth.interceptor.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/model/file-upload.status.ts","./src/app/model/user.ts","./src/app/notification.module.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/service/authentication.service.ts","./src/app/service/notification.service.ts","./src/app/service/user.service.ts","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UserComponent } from './user/user.component';\nimport { AuthenticationGuard } from './guard/authentication.guard';\n\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'user/management', component: UserComponent, canActivate: [AuthenticationGuard] },\n  { path: '', redirectTo: '/login', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {}\n","<router-outlet></router-outlet>\n<notifier-container></notifier-container>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthenticationService } from './service/authentication.service';\nimport { UserService } from './service/user.service';\nimport { AuthInterceptor } from './interceptor/auth.interceptor';\nimport { AuthenticationGuard } from './guard/authentication.guard';\nimport { NotificationModule } from './notification.module';\nimport { NotificationService } from './service/notification.service';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UserComponent } from './user/user.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    UserComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    NotificationModule\n  ],\n  providers: [NotificationService, AuthenticationGuard, AuthenticationService, UserService,\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true } ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export enum HeaderType {\r\n  AUTHORIZATION = 'Authorization',\r\n  JWT_TOKEN = 'Jwt-Token'\r\n}\r\n","export enum NotificationType {\r\n  DEFAULT = 'default',\r\n  SUCCESS = 'success',\r\n  ERROR = 'error',\r\n  INFO = 'info',\r\n  WARNING = 'warning'\r\n }\r\n","export enum Role {\r\n  SUPER_ADMIN = 'ROLE_SUPER_ADMIN',\r\n  ADMIN = 'ROLE_ADMIN',\r\n  MANAGER = 'ROLE_MANAGER',\r\n  USER = 'ROLE_USER',\r\n  HR = 'ROLE_HR'\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthenticationService } from '../service/authentication.service';\nimport { NotificationService } from '../service/notification.service';\nimport { NotificationType } from '../enum/notification-type.enum';\n\n@Injectable({providedIn: 'root'})\nexport class AuthenticationGuard implements CanActivate {\n\n  constructor(private authenticationService: AuthenticationService, private router: Router,\n              private notificationService: NotificationService) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    return this.isUserLoggedIn();\n  }\n\n  private isUserLoggedIn(): boolean {\n    if (this.authenticationService.isUserLoggedIn()) {\n      return true;\n    }\n    this.router.navigate(['/login']);\n    this.notificationService.notify(NotificationType.ERROR, `You need to log in to access this page`);\n    return false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../service/authentication.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private authenticationService: AuthenticationService) {}\n\n  intercept(httpRequest: HttpRequest<any>, httpHandler: HttpHandler): Observable<HttpEvent<any>> {\n    if (httpRequest.url.includes(`${this.authenticationService.host}/user/login`)) {\n      return httpHandler.handle(httpRequest);\n    }\n    if (httpRequest.url.includes(`${this.authenticationService.host}/user/register`)) {\n      return httpHandler.handle(httpRequest);\n    }\n    this.authenticationService.loadToken();\n    const token = this.authenticationService.getToken();\n    const request = httpRequest.clone({ setHeaders: { Authorization: `Bearer ${token}` }});\n    return httpHandler.handle(request);\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Subscription } from 'rxjs';\nimport { AuthenticationService } from '../service/authentication.service';\nimport { NotificationService } from '../service/notification.service';\nimport { User } from '../model/user';\nimport { NotificationType } from '../enum/notification-type.enum';\nimport { HeaderType } from '../enum/header-type.enum';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  public showLoading: boolean;\n  private subscriptions: Subscription[] = [];\n\n  constructor(private router: Router, private authenticationService: AuthenticationService,\n              private notificationService: NotificationService) {}\n\n  ngOnInit(): void {\n    if (this.authenticationService.isUserLoggedIn()) {\n      this.router.navigateByUrl('/user/management');\n    } else {\n      this.router.navigateByUrl('/login');\n    }\n  }\n\n  public onLogin(user: User): void {\n    this.showLoading = true;\n    this.subscriptions.push(\n      this.authenticationService.login(user).subscribe(\n        (response: HttpResponse<User>) => {\n          const token = response.headers.get(HeaderType.JWT_TOKEN);\n          this.authenticationService.saveToken(token);\n          this.authenticationService.addUserToLocalCache(response.body);\n          this.router.navigateByUrl('/user/management');\n          this.showLoading = false;\n        },\n        (errorResponse: HttpErrorResponse) => {\n          this.sendErrorNotification(NotificationType.ERROR, errorResponse.error.message);\n          this.showLoading = false;\n        }\n      )\n    );\n  }\n\n  private sendErrorNotification(notificationType: NotificationType, message: string): void {\n    if (message) {\n      this.notificationService.notify(notificationType, message);\n    } else {\n      this.notificationService.notify(notificationType, 'An error occurred. Please try again.');\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n}\n","\n<div class=\"container\" style=\"margin-top: 100px;\">\n  <div class=\"d-flex justify-content-center h-50\">\n      <div class=\"user_card\">\n        <div class=\"d-flex justify-content-center\">\n          <div style=\"margin-top: 10px;margin-bottom:-90px;\">\n            <h3>User Management Portal</h3>\n          </div>\n        </div>\n        <div class=\"d-flex justify-content-center form_container\">\n          <form #loginForm=\"ngForm\" (ngSubmit)=\"onLogin(loginForm.value)\">\n            <div class=\"input-group mb-3\">\n              <div class=\"input-group-append\">\n                <span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n              </div>\n              <input type=\"text\" class=\"form-control\" name=\"username\" placeholder=\"Username\" ngModel\n              #usernameInput=\"ngModel\" required>\n            </div>\n            <span class=\"help-block\" style=\"color:red;\"\n            *ngIf=\"usernameInput.invalid && usernameInput.touched\">Please enter a username</span>\n            <div class=\"input-group mb-2\">\n              <div class=\"input-group-append\">\n                <span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\n              </div>\n              <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\"\n              ngModel\n              #passwordInput=\"ngModel\" required>\n            </div>\n            <span class=\"help-block\" style=\"color:red;\"\n            *ngIf=\"passwordInput.invalid && passwordInput.touched\">Please enter a password.</span>\n        <div class=\"d-flex justify-content-center mt-3 login_container\">\n          <button type=\"submit\" [disabled]=\"loginForm.invalid || showLoading\" name=\"button\" class=\"btn login_btn\">\n            <i *ngIf=\"showLoading\" class=\"fas fa-spinner fa-spin\"></i>&nbsp;&nbsp;\n            <span *ngIf=\"showLoading\">Loading...</span>\n            <span *ngIf=\"!showLoading\">Login</span>\n          </button>\n        </div>\n      </form>\n    </div>\n        <div class=\"mt-4\">\n          <div class=\"d-flex justify-content-center links\">\n            Don't have an account? <a routerLink=\"/register\" class=\"ml-2\" style=\"color: #2C3E50;\">Sign Up</a>\n          </div>\n        </div>\n      </div>\n    </div>\n</div>\n\n\n","export class FileUploadStatus {\r\n  public status: string;\r\n  public  percentage: number;\r\n\r\n  constructor() {\r\n    this.status = '';\r\n    this.percentage = 0;\r\n  }\r\n}\r\n","export class User {\r\n  public userId: string;\r\n  public firstName: string;\r\n  public lastName: string;\r\n  public username: string;\r\n  public email: string;\r\n  public lastLoginDate: Date;\r\n  public lastLoginDateDisplay: Date;\r\n  public joinDate: Date;\r\n  public profileImageUrl: string;\r\n  public active: boolean;\r\n  public notLocked: boolean;\r\n  public role: string;\r\n  public authorities: [];\r\n\r\n  constructor() {\r\n    this.userId = '';\r\n    this.firstName = '';\r\n    this.lastName = '';\r\n    this.username = '';\r\n    this.email = '';\r\n    this.lastLoginDate = null;\r\n    this.lastLoginDateDisplay = null;\r\n    this.joinDate = null;\r\n    this.profileImageUrl = '';\r\n    this.active = false;\r\n    this.notLocked = false;\r\n    this.role = '';\r\n    this.authorities = [];\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NotifierOptions, NotifierModule } from 'angular-notifier';\r\n\r\nconst customNotifierOptions: NotifierOptions = {\r\n    position: {\r\n          horizontal: {\r\n              position: 'left',\r\n              distance: 150\r\n          },\r\n          vertical: {\r\n              position: 'top',\r\n              distance: 12,\r\n              gap: 10\r\n          }\r\n      },\r\n    theme: 'material',\r\n    behaviour: {\r\n      autoHide: 5000,\r\n      onClick: 'hide',\r\n      onMouseover: 'pauseAutoHide',\r\n      showDismissButton: true,\r\n      stacking: 4\r\n    },\r\n    animations: {\r\n      enabled: true,\r\n      show: {\r\n        preset: 'slide',\r\n        speed: 300,\r\n        easing: 'ease'\r\n      },\r\n      hide: {\r\n        preset: 'fade',\r\n        speed: 300,\r\n        easing: 'ease',\r\n        offset: 50\r\n      },\r\n      shift: {\r\n        speed: 300,\r\n        easing: 'ease'\r\n      },\r\n      overlap: 150\r\n    }\r\n  };\r\n\r\n@NgModule({\r\n  imports: [NotifierModule.withConfig(customNotifierOptions)],\r\n  exports: [NotifierModule]\r\n})\r\nexport class NotificationModule {}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Subscription } from 'rxjs';\nimport { AuthenticationService } from '../service/authentication.service';\nimport { NotificationService } from '../service/notification.service';\nimport { User } from '../model/user';\nimport { NotificationType } from '../enum/notification-type.enum';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n  public showLoading: boolean;\n  private subscriptions: Subscription[] = [];\n\n  constructor(private router: Router, private authenticationService: AuthenticationService,\n              private notificationService: NotificationService) {}\n\n  ngOnInit(): void {\n    if (this.authenticationService.isUserLoggedIn()) {\n      this.router.navigateByUrl('/user/management');\n    }\n  }\n\n  public onRegister(user: User): void {\n    this.showLoading = true;\n    this.subscriptions.push(\n      this.authenticationService.register(user).subscribe(\n        (response: User) => {\n          this.showLoading = false;\n          this.sendNotification(NotificationType.SUCCESS, `A new account was created for ${response.firstName}.\n          Please check your email for password to log in.`);\n        },\n        (errorResponse: HttpErrorResponse) => {\n          this.sendNotification(NotificationType.ERROR, errorResponse.error.message);\n          this.showLoading = false;\n        }\n      )\n    );\n  }\n\n  private sendNotification(notificationType: NotificationType, message: string): void {\n    if (message) {\n      this.notificationService.notify(notificationType, message);\n    } else {\n      this.notificationService.notify(notificationType, 'An error occurred. Please try again.');\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n}\n","<div class=\"container\" style=\"margin-top: 100px;\">\n  <div class=\"d-flex justify-content-center h-50\">\n      <div class=\"user_card\">\n        <div class=\"d-flex justify-content-center\">\n          <div style=\"margin-top: 10px;margin-bottom:-90px;\">\n            <h3>User Management Portal</h3>\n          </div>\n        </div>\n        <div class=\"d-flex justify-content-center form_container\">\n          <form #registerForm=\"ngForm\" (ngSubmit)=\"onRegister(registerForm.value)\">\n            <div class=\"input-group mb-3\">\n              <div class=\"input-group-append\">\n                <span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n              </div>\n              <input type=\"text\" class=\"form-control\" name=\"firstName\" placeholder=\"First name\" required ngModel #firstNameInput=\"ngModel\">\n            </div>\n            <span class=\"help-block\" *ngIf=\"firstNameInput.invalid && firstNameInput.touched\" style=\"color:red;\">Please enter a first name</span>\n            <div class=\"input-group mb-3\">\n              <div class=\"input-group-append\">\n                <span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n              </div>\n              <input type=\"text\" class=\"form-control\" name=\"lastName\" placeholder=\"Last name\" required ngModel #lastNameInput=\"ngModel\">\n            </div>\n            <span class=\"help-block\" *ngIf=\"lastNameInput.invalid && lastNameInput.touched\" style=\"color:red;\">Please enter a last name</span>\n            <div class=\"input-group mb-3\">\n              <div class=\"input-group-append\">\n                <span class=\"input-group-text\"><i class=\"fas fa-id-card\"></i></span>\n              </div>\n              <input type=\"text\" class=\"form-control\" name=\"username\" placeholder=\"Username\" required ngModel #usernameInput=\"ngModel\">\n            </div>\n            <span class=\"help-block\" *ngIf=\"usernameInput.invalid && usernameInput.touched\" style=\"color:red;\">Please enter a username</span>\n            <div class=\"input-group mb-2\">\n              <div class=\"input-group-append\">\n                <span class=\"input-group-text\"><i class=\"fas fa-envelope\"></i></span>\n              </div>\n              <input type=\"text\" class=\"form-control\" name=\"email\" placeholder=\"Email\" required ngModel #emailInput=\"ngModel\">\n            </div>\n            <span class=\"help-block\" *ngIf=\"emailInput.invalid && emailInput.touched\" style=\"color:red;\">Please enter an email.</span>\n        <div class=\"d-flex justify-content-center mt-3 login_container\">\n          <button [disabled]=\"registerForm.invalid || showLoading\" type=\"submit\" name=\"button\" class=\"btn login_btn\">\n            <i *ngIf=\"showLoading\" class=\"fas fa-spinner fa-spin\"></i>&nbsp;&nbsp;\n            <span *ngIf=\"showLoading\">Loading...</span>\n            <span *ngIf=\"!showLoading\">Register</span>\n          </button>\n        </div>\n      </form>\n    </div>\n        <div class=\"mt-4\">\n          <div class=\"d-flex justify-content-center links\">\n            Already have an account? <a routerLink=\"/login\"  class=\"ml-2\" style=\"color: #2C3E50;\">Log In</a>\n          </div>\n        </div>\n      </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { User } from '../model/user';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n\n@Injectable({providedIn: 'root'})\nexport class AuthenticationService {\n  public host = environment.apiUrl;\n  private token: string;\n  private loggedInUsername: string;\n  private jwtHelper = new JwtHelperService();\n\n  constructor(private http: HttpClient) {}\n\n  public login(user: User): Observable<HttpResponse<User>> {\n    return this.http.post<User>(`${this.host}/user/login`, user, { observe: 'response' });\n  }\n\n  public register(user: User): Observable<User> {\n    return this.http.post<User>(`${this.host}/user/register`, user);\n  }\n\n  public logOut(): void {\n    this.token = null;\n    this.loggedInUsername = null;\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    localStorage.removeItem('users');\n  }\n\n  public saveToken(token: string): void {\n    this.token = token;\n    localStorage.setItem('token', token);\n  }\n\n  public addUserToLocalCache(user: User): void {\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n\n  public getUserFromLocalCache(): User {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n\n  public loadToken(): void {\n    this.token = localStorage.getItem('token');\n  }\n\n  public getToken(): string {\n    return this.token;\n  }\n\n  public isUserLoggedIn(): boolean {\n    this.loadToken();\n    if (this.token != null && this.token !== ''){\n      if (this.jwtHelper.decodeToken(this.token).sub != null || '') {\n        if (!this.jwtHelper.isTokenExpired(this.token)) {\n          this.loggedInUsername = this.jwtHelper.decodeToken(this.token).sub;\n          return true;\n        }\n      }\n    } else {\n      this.logOut();\n      return false;\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { NotifierService } from 'angular-notifier';\nimport { NotificationType } from '../enum/notification-type.enum';\n\n@Injectable({providedIn: 'root'})\nexport class NotificationService {\n\n  constructor(private notifier: NotifierService) {}\n\n  public notify(type: NotificationType, message: string) {\n    this.notifier.notify(type, message);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse, HttpErrorResponse, HttpEvent } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { User } from '../model/user';\nimport { CustomHttpRespone } from '../model/custom-http-response';\n\n@Injectable({providedIn: 'root'})\nexport class UserService {\n  private host = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  public getUsers(): Observable<User[]> {\n    return this.http.get<User[]>(`${this.host}/user/list`);\n  }\n\n  public addUser(formData: FormData): Observable<User> {\n    return this.http.post<User>(`${this.host}/user/add`, formData);\n  }\n\n  public updateUser(formData: FormData): Observable<User> {\n    return this.http.post<User>(`${this.host}/user/update`, formData);\n  }\n\n  public resetPassword(email: string): Observable<CustomHttpRespone> {\n    return this.http.get<CustomHttpRespone>(`${this.host}/user/resetpassword/${email}`);\n  }\n\n  public updateProfileImage(formData: FormData): Observable<HttpEvent<User>> {\n    return this.http.post<User>(`${this.host}/user/updateProfileImage`, formData,\n    {reportProgress: true,\n      observe: 'events'\n    });\n  }\n\n  public deleteUser(username: string): Observable<CustomHttpRespone> {\n    return this.http.delete<CustomHttpRespone>(`${this.host}/user/delete/${username}`);\n  }\n\n  public addUsersToLocalCache(users: User[]): void {\n    localStorage.setItem('users', JSON.stringify(users));\n  }\n\n  public getUsersFromLocalCache(): User[] {\n    if (localStorage.getItem('users')) {\n        return JSON.parse(localStorage.getItem('users'));\n    }\n    return null;\n  }\n\n  public createUserFormDate(loggedInUsername: string, user: User, profileImage: File): FormData {\n    const formData = new FormData();\n    formData.append('currentUsername', loggedInUsername);\n    formData.append('firstName', user.firstName);\n    formData.append('lastName', user.lastName);\n    formData.append('username', user.username);\n    formData.append('email', user.email);\n    formData.append('role', user.role);\n    formData.append('profileImage', profileImage);\n    formData.append('isActive', JSON.stringify(user.active));\n    formData.append('isNonLocked', JSON.stringify(user.notLocked));\n    return formData;\n  }\n\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { User } from '../model/user';\nimport { UserService } from '../service/user.service';\nimport { NotificationService } from '../service/notification.service';\nimport { NotificationType } from '../enum/notification-type.enum';\nimport { HttpErrorResponse, HttpEvent, HttpEventType } from '@angular/common/http';\nimport { NgForm } from '@angular/forms';\nimport { CustomHttpRespone } from '../model/custom-http-response';\nimport { AuthenticationService } from '../service/authentication.service';\nimport { Router } from '@angular/router';\nimport { FileUploadStatus } from '../model/file-upload.status';\nimport { Role } from '../enum/role.enum';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit, OnDestroy {\n  private titleSubject = new BehaviorSubject<string>('Users');\n  public titleAction$ = this.titleSubject.asObservable();\n  public users: User[];\n  public user: User;\n  public refreshing: boolean;\n  public selectedUser: User;\n  public fileName: string;\n  public profileImage: File;\n  private subscriptions: Subscription[] = [];\n  public editUser = new User();\n  private currentUsername: string;\n  public fileStatus = new FileUploadStatus();\n\n  constructor(private router: Router, private authenticationService: AuthenticationService,\n              private userService: UserService, private notificationService: NotificationService) {}\n\n  ngOnInit(): void {\n    this.user = this.authenticationService.getUserFromLocalCache();\n    this.getUsers(true);\n  }\n\n  public changeTitle(title: string): void {\n    this.titleSubject.next(title);\n  }\n\n  public getUsers(showNotification: boolean): void {\n    this.refreshing = true;\n    this.subscriptions.push(\n      this.userService.getUsers().subscribe(\n        (response: User[]) => {\n          this.userService.addUsersToLocalCache(response);\n          this.users = response;\n          this.refreshing = false;\n          if (showNotification) {\n            this.sendNotification(NotificationType.SUCCESS, `${response.length} user(s) loaded successfully.`);\n          }\n        },\n        (errorResponse: HttpErrorResponse) => {\n          this.sendNotification(NotificationType.ERROR, errorResponse.error.message);\n          this.refreshing = false;\n        }\n      )\n    );\n\n  }\n\n  public onSelectUser(selectedUser: User): void {\n    this.selectedUser = selectedUser;\n    this.clickButton('openUserInfo');\n  }\n\n  public onProfileImageChange(fileName: string, profileImage: File): void {\n    this.fileName =  fileName;\n    this.profileImage = profileImage;\n  }\n\n  public saveNewUser(): void {\n    this.clickButton('new-user-save');\n  }\n\n  public onAddNewUser(userForm: NgForm): void {\n    const formData = this.userService.createUserFormDate(null, userForm.value, this.profileImage);\n    this.subscriptions.push(\n      this.userService.addUser(formData).subscribe(\n        (response: User) => {\n          this.clickButton('new-user-close');\n          this.getUsers(false);\n          this.fileName = null;\n          this.profileImage = null;\n          userForm.reset();\n          this.sendNotification(NotificationType.SUCCESS, `${response.firstName} ${response.lastName} added successfully`);\n        },\n        (errorResponse: HttpErrorResponse) => {\n          this.sendNotification(NotificationType.ERROR, errorResponse.error.message);\n          this.profileImage = null;\n        }\n      )\n      );\n  }\n\n  public onUpdateUser(): void {\n    const formData = this.userService.createUserFormDate(this.currentUsername, this.editUser, this.profileImage);\n    this.subscriptions.push(\n      this.userService.updateUser(formData).subscribe(\n        (response: User) => {\n          this.clickButton('closeEditUserModalButton');\n          this.getUsers(false);\n          this.fileName = null;\n          this.profileImage = null;\n          this.sendNotification(NotificationType.SUCCESS, `${response.firstName} ${response.lastName} updated successfully`);\n        },\n        (errorResponse: HttpErrorResponse) => {\n          this.sendNotification(NotificationType.ERROR, errorResponse.error.message);\n          this.profileImage = null;\n        }\n      )\n      );\n  }\n\n  public onUpdateCurrentUser(user: User): void {\n    this.refreshing = true;\n    this.currentUsername = this.authenticationService.getUserFromLocalCache().username;\n    const formData = this.userService.createUserFormDate(this.currentUsername, user, this.profileImage);\n    this.subscriptions.push(\n      this.userService.updateUser(formData).subscribe(\n        (response: User) => {\n          this.authenticationService.addUserToLocalCache(response);\n          this.getUsers(false);\n          this.fileName = null;\n          this.profileImage = null;\n          this.sendNotification(NotificationType.SUCCESS, `${response.firstName} ${response.lastName} updated successfully`);\n        },\n        (errorResponse: HttpErrorResponse) => {\n          this.sendNotification(NotificationType.ERROR, errorResponse.error.message);\n          this.refreshing = false;\n          this.profileImage = null;\n        }\n      )\n      );\n  }\n\n  public onUpdateProfileImage(): void {\n    const formData = new FormData();\n    formData.append('username', this.user.username);\n    formData.append('profileImage', this.profileImage);\n    this.subscriptions.push(\n      this.userService.updateProfileImage(formData).subscribe(\n        (event: HttpEvent<any>) => {\n          this.reportUploadProgress(event);\n        },\n        (errorResponse: HttpErrorResponse) => {\n          this.sendNotification(NotificationType.ERROR, errorResponse.error.message);\n          this.fileStatus.status = 'done';\n        }\n      )\n    );\n  }\n\n  private reportUploadProgress(event: HttpEvent<any>): void {\n    switch (event.type) {\n      case HttpEventType.UploadProgress:\n        this.fileStatus.percentage = Math.round(100 * event.loaded / event.total);\n        this.fileStatus.status = 'progress';\n        break;\n      case HttpEventType.Response:\n        if (event.status === 200) {\n          this.user.profileImageUrl = `${event.body.profileImageUrl}?time=${new Date().getTime()}`;\n          this.sendNotification(NotificationType.SUCCESS, `${event.body.firstName}\\'s profile image updated successfully`);\n          this.fileStatus.status = 'done';\n          break;\n        } else {\n          this.sendNotification(NotificationType.ERROR, `Unable to upload image. Please try again`);\n          break;\n        }\n      default:\n        `Finished all processes`;\n    }\n  }\n\n  public updateProfileImage(): void {\n    this.clickButton('profile-image-input');\n  }\n\n  public onLogOut(): void {\n    this.authenticationService.logOut();\n    this.router.navigate(['/login']);\n    this.sendNotification(NotificationType.SUCCESS, `You've been successfully logged out`);\n  }\n\n  public onResetPassword(emailForm: NgForm): void {\n    this.refreshing = true;\n    const emailAddress = emailForm.value['reset-password-email'];\n    this.subscriptions.push(\n      this.userService.resetPassword(emailAddress).subscribe(\n        (response: CustomHttpRespone) => {\n          this.sendNotification(NotificationType.SUCCESS, response.message);\n          this.refreshing = false;\n        },\n        (error: HttpErrorResponse) => {\n          this.sendNotification(NotificationType.WARNING, error.error.message);\n          this.refreshing = false;\n        },\n        () => emailForm.reset()\n      )\n    );\n  }\n\n  public onDeleteUder(username: string): void {\n    this.subscriptions.push(\n      this.userService.deleteUser(username).subscribe(\n        (response: CustomHttpRespone) => {\n          this.sendNotification(NotificationType.SUCCESS, response.message);\n          this.getUsers(false);\n        },\n        (error: HttpErrorResponse) => {\n          this.sendNotification(NotificationType.ERROR, error.error.message);\n        }\n      )\n    );\n  }\n\n  public onEditUser(editUser: User): void {\n    this.editUser = editUser;\n    this.currentUsername = editUser.username;\n    this.clickButton('openUserEdit');\n  }\n\n  public searchUsers(searchTerm: string): void {\n    const results: User[] = [];\n    for (const user of this.userService.getUsersFromLocalCache()) {\n      if (user.firstName.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1 ||\n          user.lastName.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1 ||\n          user.username.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1 ||\n          user.userId.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1) {\n          results.push(user);\n      }\n    }\n    this.users = results;\n    if (results.length === 0 || !searchTerm) {\n      this.users = this.userService.getUsersFromLocalCache();\n    }\n  }\n\n  public get isAdmin(): boolean {\n    return this.getUserRole() === Role.ADMIN || this.getUserRole() === Role.SUPER_ADMIN;\n  }\n\n  public get isManager(): boolean {\n    return this.isAdmin || this.getUserRole() === Role.MANAGER;\n  }\n\n  public get isAdminOrManager(): boolean {\n    return this.isAdmin || this.isManager;\n  }\n\n  private getUserRole(): string {\n    return this.authenticationService.getUserFromLocalCache().role;\n  }\n\n  private sendNotification(notificationType: NotificationType, message: string): void {\n    if (message) {\n      this.notificationService.notify(notificationType, message);\n    } else {\n      this.notificationService.notify(notificationType, 'An error occurred. Please try again.');\n    }\n  }\n\n  private clickButton(buttonId: string): void {\n    document.getElementById(buttonId).click();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row mb-2 mt-2 text-center\">\n    <div class=\"col-md-4\">\n    </div>\n    <div class=\"col-md-4\">\n      <h5>User Management Portal</h5>\n      <small *ngIf=\"titleAction$ | async as title\">{{ title }}</small>\n    </div>\n    <div class=\"col-md-4\">\n    </div>\n  </div>\n\n  <!-- nav bar -->\n  <nav class=\"navbar navbar-expand-md breadcrumb\">\n    <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n      <div class=\"nav nav-pills\">\n        <a class=\"nav-item nav-link active ml-1\" (click)=\"changeTitle('Users')\" data-toggle=\"tab\" href=\"#users\">\n          <i class=\"fa fa-users\"></i>\n          Users\n        </a>\n        <a [hidden]=\"!isAdmin\" class=\"nav-item nav-link ml-3\" (click)=\"changeTitle('Settings')\" data-toggle=\"tab\" href=\"#reset-password\">\n          <i class=\"fa fa-cogs\"></i>\n          Settings\n        </a>\n        <a class=\"nav-item nav-link move-right mr-3\" (click)=\"changeTitle('Profile')\" data-toggle=\"tab\" href=\"#profile\">\n          Welcome, {{user?.firstName}}\n          <i class=\"fa fa-user\"></i>\n        </a>\n      </div>\n    </div>\n  </nav>\n\n  <!-- main content -->\n  <div class=\"tab-content mt-3\" id=\"myTabContent\">\n    <!-- user table -->\n    <div class=\"tab-pane fade show active\" id=\"users\">\n      <div class=\"mb-3 float-right\">\n        <div class=\"btn-group mr-2\">\n          <form class=\"form-inline my-2 my-lg-0 justify-content-center\">\n            <input name=\"searchTerm\" #searchInput=\"ngModel\" class=\"form-control mr-sm-2\" ngModel\n            (ngModelChange)=\"searchUsers(searchInput.value)\" type=\"search\" placeholder=\"Search users...\">\n         </form>\n          <button [hidden]=\"!isAdmin\" type=\"button\" class=\"btn btn-info\" data-toggle=\"modal\" data-target=\"#addUserModal\">\n            <i class=\"fa fa-plus\"></i>New User\n          </button>\n        </div>\n        <div class=\"btn-group\">\n          <button type=\"button\" (click)=\"getUsers(true)\" class=\"btn btn-info\">\n            <i *ngIf=\"refreshing\" class=\"fas fa-sync fa-spin\"></i><i *ngIf=\"!refreshing\" class=\"fas fa-sync\"></i>\n          </button>\n        </div>\n      </div>\n      <table class=\"table table-hover\">\n        <thead class=\"table-borderless\">\n          <tr class=\"text-center\">\n            <th>Photo</th>\n            <th>User ID</th>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Username</th>\n            <th>Email</th>\n            <th>Status</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody *ngFor=\"let appUser of users\">\n          <tr class=\"text-center\">\n            <td (click)=\"onSelectUser(appUser)\">\n              <img height=\"40\" width=\"40\" src=\"{{appUser?.profileImageUrl}}\" class=\"rounded-circle img-fluid img-thumbnail\" alt=\"\"/>\n            </td>\n            <td (click)=\"onSelectUser(appUser)\">{{appUser?.userId}}</td>\n            <td (click)=\"onSelectUser(appUser)\">{{appUser?.firstName}}</td>\n            <td (click)=\"onSelectUser(appUser)\">{{appUser?.lastName}}</td>\n            <td (click)=\"onSelectUser(appUser)\">{{appUser?.username}}</td>\n            <td (click)=\"onSelectUser(appUser)\">{{appUser?.email}}</td>\n            <td (click)=\"onSelectUser(appUser)\">\n              <span [hidden]=\"!appUser?.active\" class=\"badge badge-success\">Active</span>\n              <span [hidden]=\"appUser?.active\" class=\"badge badge-danger\">Inactive</span>\n            </td>\n            <td class=\"\">\n              <div class=\"btn-group\">\n                <button class=\"btn btn-outline-info\" (click)=\"onEditUser(appUser)\"><i class=\"fas fa-edit\"></i></button>\n                <button [hidden]=\"!isAdmin\" class=\"btn btn-outline-danger\" (click)=\"onDeleteUder(appUser?.username)\"><i class=\"fas fa-trash\"></i></button>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <button [hidden]=\"true\" type=\"button\" id=\"openUserInfo\" data-toggle=\"modal\" data-target=\"#viewUserModal\">\n    </button>\n    <button [hidden]=\"true\" type=\"button\" id=\"openUserEdit\" data-toggle=\"modal\" data-target=\"#editUserModal\">\n    </button>\n\n    <!-- change password  -->\n    <div [hidden]=\"!isAdmin\" class=\"tab-pane fade\" id=\"reset-password\">\n      <form #resetPasswordForm=\"ngForm\" (ngSubmit)=\"onResetPassword(resetPasswordForm)\">\n        <fieldset>\n          <legend>User Password Management</legend>\n          <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\">Email address</label>\n            <input type=\"email\" name=\"reset-password-email\" required ngModel class=\"form-control\"\n              placeholder=\"Enter email (example@email.com)\">\n            <small class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n          </div>\n          <button type=\"submit\" [disabled]=\"resetPasswordForm.invalid\" class=\"btn btn-primary\">\n            <i *ngIf=\"refreshing\" class=\"fas fa-spinner fa-spin\"></i>&nbsp;&nbsp;\n            <span *ngIf=\"refreshing\">Loading...</span>\n            <span *ngIf=\"!refreshing\">Reset Password</span>\n          </button>\n        </fieldset>\n      </form>\n    </div>\n\n    <!-- user profile -->\n    <div class=\"tab-pane fade\" id=\"profile\">\n      <div class=\"container\">\n        <div class=\"row flex-lg-nowrap\">\n          <div class=\"col\">\n            <div class=\"row\">\n              <div class=\"col mb-3\">\n                <div class=\"card\">\n                  <div class=\"card-body\">\n                    <div class=\"e-profile\">\n                      <div class=\"row\">\n                        <div class=\"col-12 col-sm-auto\">\n                          <div class=\"mx-auto\" style=\"width: 120px;\">\n                            <div class=\"d-flex justify-content-center align-items-center rounded\">\n                              <img class=\"rounded\" height=\"135\" width=\"135\" src=\"{{user?.profileImageUrl}}\" alt=\"\">\n                            </div>\n                            <div *ngIf=\"fileStatus?.status==='progress'\" class=\"progress mt-1\">\n                              <div class=\"progress-bar bg-info\" role=\"progressbar\"\n                                [style.width.%]=\"fileStatus?.percentage\" aria-valuenow=\"0\" aria-valuemin=\"0\"\n                                aria-valuemax=\"100\">{{fileStatus?.percentage}}%</div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col d-flex flex-column flex-sm-row justify-content-between mb-3\">\n                          <div class=\"text-center text-sm-left mb-2 mb-sm-0\">\n                            <h4 class=\"pt-sm-2 pb-1 mb-0 text-nowrap\">{{user?.firstName}} {{user?.lastName}}</h4>\n                            <p class=\"mb-0\">{{user?.username}}</p>\n                            <div *ngIf=\"user?.lastLoginDateDisplay !== null\" class=\"text-muted\"><small>Last login:\n                                {{user?.lastLoginDateDisplay | date:'medium'}}</small></div>\n                            <div class=\"mt-2\">\n                              <button (click)=\"updateProfileImage()\" class=\"btn btn-primary\" type=\"button\">\n                                <i class=\"fa fa-fw fa-camera\"></i>\n                                <span>Change Photo</span>\n                              </button>\n                            </div>\n                          </div>\n                          <div class=\"text-center text-sm-right\">\n                            <div class=\"text-muted\"><small>Joined {{user?.joinDate | date:'mediumDate'}}</small></div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"tab-content pt-3\">\n                        <div class=\"tab-pane active\">\n                          <form #profileUserForm=\"ngForm\" (ngSubmit)=\"onUpdateCurrentUser(profileUserForm.value)\" class=\"form\"\n                            novalidate>\n                            <div class=\"row\">\n                              <div class=\"col\">\n                                <div class=\"row\">\n                                  <div class=\"col\">\n                                    <div class=\"form-group\">\n                                      <label>First Name</label>\n                                      <input type=\"text\" name=\"firstName\" required [(ngModel)]=\"user.firstName\"\n                                        class=\"form-control\">\n                                    </div>\n                                  </div>\n                                  <div class=\"col\">\n                                    <div class=\"form-group\">\n                                      <label>Last Name</label>\n                                      <input type=\"text\" name=\"lastName\" required [(ngModel)]=\"user.lastName\"\n                                        class=\"form-control\">\n                                    </div>\n                                  </div>\n                                </div>\n                                <div class=\"row\">\n                                  <div class=\"col\">\n                                    <div class=\"form-group\">\n                                      <label>Username</label>\n                                      <input type=\"text\" name=\"username\" required [(ngModel)]=\"user.username\"\n                                        class=\"form-control\">\n                                    </div>\n                                  </div>\n                                </div>\n                                <div class=\"row\">\n                                  <div class=\"col\">\n                                    <div class=\"form-group\">\n                                      <label>Email</label>\n                                      <input type=\"text\" name=\"email\" required [(ngModel)]=\"user.email\"\n                                        class=\"form-control\">\n                                    </div>\n                                  </div>\n                                </div>\n                                <div class=\"row\">\n                                  <div class=\"col mb-3\">\n                                    <div class=\"form-group\">\n                                      <label>Role</label><small [hidden]=\"isAdmin\">(read only)</small>\n                                      <select name=\"role\" required [(ngModel)]=\"user.role\" class=\"form-control\">\n                                          <option [hidden]=\"!isAdmin\" value=\"ROLE_USER\">USER</option>\n                                          <option [hidden]=\"!isAdmin\" value=\"ROLE_HR\">HR</option>\n                                          <option [hidden]=\"!isAdmin\" value=\"ROLE_MANAGER\">MANAGER</option>\n                                          <option [hidden]=\"!isAdmin\" value=\"ROLE_ADMIN\">ADMIN</option>\n                                          <option [hidden]=\"!isAdmin\" value=\"ROLE_SUPER_ADMIN\">SUPER ADMIN</option>\n                                        </select>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"row\">\n                              <div class=\"col-12 col-sm-5 offset-sm-1 mb-3\">\n                                <div class=\"mb-2\"><b>Account Settings</b></div>\n                                <div class=\"row\">\n                                  <div class=\"col\">\n                                    <div class=\"custom-controls-stacked px-2\">\n                                      <div class=\"custom-control custom-checkbox\">\n                                        <input name=\"active\" type=\"checkbox\" [(ngModel)]=\"user.active\" class=\"custom-control-input\">\n                                        <label class=\"custom-control-label\">Active</label>\n                                      </div>\n                                      <div class=\"custom-control custom-checkbox\">\n                                        <input name=\"notLocked\" type=\"checkbox\"\n                                          [(ngModel)]=\"user.notLocked\" class=\"custom-control-input\">\n                                        <label class=\"custom-control-label\">Unlocked</label>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"row\">\n                              <div class=\"col d-flex justify-content-end\">\n                                <button class=\"btn btn-primary\" type=\"submit\">\n                                  <i *ngIf=\"refreshing\" class=\"fas fa-spinner fa-spin\"></i>&nbsp;&nbsp;\n                                  <span *ngIf=\"refreshing\">Loading...</span>\n                                  <span *ngIf=\"!refreshing\">Save Changes</span>\n                                </button>\n                              </div>\n                            </div>\n                          </form>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-12 col-md-3 mb-3\">\n                <div class=\"card mb-3\">\n                  <div class=\"card-body\">\n                    <div class=\"px-xl-3\">\n                      <button (click)=\"onLogOut()\" class=\"btn btn-block btn-secondary\">\n                        <span>Logout</span>\n                        <i class=\"fas fa-sign-in-alt ml-1\"></i>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"card\">\n                  <div class=\"card-body\">\n                    <h6 class=\"card-title font-weight-bold\">Permissions From Role</h6>\n                    <h6 *ngFor=\"let authority of user?.authorities\" class=\"card-text\">{{authority}}</h6>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- modal user info -->\n    <div class=\"modal fade bd-example-modal-lg\" id=\"viewUserModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"\"\n      aria-hidden=\"true\">\n      <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title text-center\" id=\"exampleModalLongTitle\">{{selectedUser?.firstName}}\n              {{selectedUser?.lastName}}\n            </h5>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            <div>\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <div class=\"row\">\n                    <div class=\"col-12 col-sm-auto\">\n                      <div class=\"mx-auto\" style=\"width: 120px;\">\n                        <div class=\"d-flex justify-content-center align-items-center rounded\">\n                          <img class=\"rounded\" height=\"120\" width=\"120\" src=\"{{selectedUser?.profileImageUrl}}\" alt=\"{{selectedUser?.firstName}}\">\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col d-flex flex-column flex-sm-row justify-content-between\">\n                      <div class=\"text-center text-sm-left mb-sm-0\">\n                        <h6 class=\"pt-sm-2 pb-1 mb-0 text-nowrap\">{{selectedUser?.firstName}}\n                          {{selectedUser?.lastName}}</h6>\n                        <p class=\"mb-1\">{{selectedUser?.username}}</p>\n                        <div class=\"\">Status:\n                          <span [hidden]=\"!selectedUser?.active\" class=\"badge badge-success\">Active</span>\n                          <span [hidden]=\"selectedUser?.active\" class=\"badge badge-danger\">Inactive</span>\n                        </div>\n                        <div *ngIf=\"selectedUser?.lastLoginDateDisplay\" class=\"text-muted\"><small>Last Login: {{selectedUser?.lastLoginDateDisplay | date: 'medium'}}</small>\n                        </div>\n                      </div>\n                      <div class=\"text-center text-sm-right\">\n                        <div class=\"text-muted\"><small>Joined {{selectedUser?.joinDate | date: 'mediumDate'}}</small></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <ul class=\"list-group list-group-flush\">\n                  <li class=\"list-group-item\"></li>\n                  <li class=\"list-group-item\"><i class=\"fa fa-id-badge float-right\"></i>{{selectedUser?.userId}}\n                  </li>\n                  <li class=\"list-group-item\"><i class=\"fa fa-envelope float-right\"></i>{{selectedUser?.email}}\n                  </li>\n                  <li class=\"list-group-item\"><i class=\"fas fa-shield-alt float-right\"></i>{{selectedUser?.role.substring(5)}}\n                  <li *ngIf=\"selectedUser?.lastLoginDateDisplay\" class=\"list-group-item\"><i\n                      class=\"fas fa-sign-in-alt float-right\"></i>{{selectedUser?.lastLoginDateDisplay | date: 'medium'}}\n                  </li>\n                  <li class=\"list-group-item\">\n                    <span [hidden]=\"selectedUser?.notLocked\">\n                      <i class=\"fa fa-lock float-right\" style=\"color: red;\">\n                      </i>\n                      Account Locked\n                    </span>\n                    <span [hidden]=\"!selectedUser?.notLocked\">\n                      <i class=\"fa fa-unlock float-right\" style=\"color: green;\">\n                      </i>\n                      Account Unlocked\n                    </span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- model add user -->\n    <div [hidden]=\"!isAdmin\" class=\"modal draggable fade bd-example-modal-lg\" id=\"addUserModal\" tabindex=\"-1\" role=\"dialog\"\n      aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title text-center\">New User</h5>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            <div>\n              <form #newUserForm=\"ngForm\" (ngSubmit)=\"onAddNewUser(newUserForm)\">\n                <div class=\"form-group\">\n                  <label for=\"firstName\">First Name</label>\n                  <input type=\"text\" name=\"firstName\" required ngModel class=\"form-control\">\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"lastName\">Last Name</label>\n                  <input type=\"text\" name=\"lastName\" required ngModel class=\"form-control\">\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"username\">Username</label>\n                  <input type=\"text\" name=\"username\" required ngModel class=\"form-control\">\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"email\">Email</label>\n                  <input type=\"email\" name=\"email\" required ngModel class=\"form-control\">\n                </div>\n                <div *ngIf=\"isAdmin\" class=\"form-group\">\n                  <label for=\"authority\">Role</label>\n                  <select name=\"role\" required ngModel=\"ROLE_USER\" class=\"form-control\">\n                    <option value=\"ROLE_USER\">USER</option>\n                    <option value=\"ROLE_HR\">HR</option>\n                    <option value=\"ROLE_MANAGER\">MANAGER</option>\n                    <option value=\"ROLE_ADMIN\">ADMIN</option>\n                    <option value=\"ROLE_SUPER_ADMIN\">SUPER ADMIN</option>\n                  </select>\n                </div>\n                <div *ngIf=\"!isAdmin\" class=\"form-group\">\n                  <label for=\"authority\">Role</label>\n                  <input type=\"text\" name=\"role\" required ngModel=\"USER\" readonly class=\"form-control\">\n                </div>\n                <div class=\"input-group mb-2\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\">Profile Picture </span>\n                  </div>\n                  <div class=\"custom-file\">\n                    <input type=\"file\" accept=\"image/*\" name=\"profileImage\"\n                    (change)=\"onProfileImageChange($event.target.files[0].name, $event.target.files[0])\"\n                      class=\"custom-file-input\">\n                    <label class=\"custom-file-label\"><span [hidden]=\"!fileName\">{{ fileName }}</span>\n                      <span [hidden]=\"fileName\">Choose File</span>\n                    </label>\n                  </div>\n                </div>\n                <fieldset class=\"form-group\">\n                  <div class=\"form-check\">\n                    <label class=\"form-check-label\">\n                      <input type=\"checkbox\" name=\"active\" ngModel class=\"form-check-input\" >\n                      Acitve\n                    </label>\n                  </div>\n                  <div class=\"form-check disabled\">\n                    <label class=\"form-check-label\">\n                      <input type=\"checkbox\" name=\"notLocked\" ngModel class=\"form-check-input\">\n                      Unlocked\n                    </label>\n                  </div>\n                </fieldset>\n                <button type=\"submit\" style=\"display: none;\" id=\"new-user-save\"></button>\n              </form>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" id=\"new-user-close\">Close</button>\n            <button type=\"button\" (click)=\"saveNewUser()\" [disabled]=\"newUserForm.invalid\" class=\"btn btn-primary\">Save changes</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n     <!-- modal edit user -->\n  <div class=\"modal draggable fade bd-example-modal-lg\" id=\"editUserModal\" tabindex=\"-1\"\n  role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title text-center\">Edit {{editUser?.firstName}}\n          {{editUser?.lastName}} <small [hidden]=\"isAdminOrManager\">\n            (read only)\n          </small></h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"\">\n          <form #editUserForm=\"ngForm\">\n            <div class=\"form-group\">\n              <label for=\"firstName\">First Name</label>\n              <input type=\"text\" name=\"firstName\" [disabled]=\"!isAdminOrManager\" required\n                [(ngModel)]=\"editUser.firstName\" class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n              <label for=\"lastName\">Last Name</label>\n              <input type=\"text\" name=\"lastName\" [disabled]=\"!isAdminOrManager\" required\n                [(ngModel)]=\"editUser.lastName\" class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n              <label for=\"username\">Username</label>\n              <input type=\"text\" name=\"username\" [disabled]=\"!isAdminOrManager\" required\n                [(ngModel)]=\"editUser.username\" class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n              <label for=\"email\">Email</label>\n              <input type=\"email\" name=\"email\" [disabled]=\"!isAdminOrManager\" required [(ngModel)]=\"editUser.email\"\n                class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n              <label for=\"authority\">Role <small [hidden]=\"isAdmin\">(read only)</small></label>\n                <select name=\"role\" [disabled]=\"!isAdmin\" required [(ngModel)]=\"editUser.role\" class=\"form-control\">\n                  <option value=\"ROLE_USER\">USER</option>\n                  <option value=\"ROLE_HR\">HR</option>\n                  <option value=\"ROLE_MANAGER\">MANAGER</option>\n                  <option value=\"ROLE_ADMIN\">ADMIN</option>\n                  <option value=\"ROLE_SUPER_ADMIN\">SUPER ADMIN</option>\n                </select>\n            </div>\n            <div class=\"input-group mb-2\">\n              <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\">Profile Picture </span>\n              </div>\n              <div class=\"custom-file\">\n                <input type=\"file\" accept=\"image/*\" [disabled]=\"!isAdminOrManager\" name=\"profileImage\"\n                  (change)=\"onProfileImageChange($event.target.files[0].name, $event.target.files[0])\"\n                  class=\"custom-file-input\">\n                <label class=\"custom-file-label\"><span [hidden]=\"!fileName\">{{fileName}}</span>\n                  <span [hidden]=\"fileName\">Choose File</span>\n                </label>\n              </div>\n            </div>\n            <fieldset class=\"form-group\">\n              <div class=\"form-check\">\n                <label class=\"form-check-label\">\n                  <input name=\"active\" type=\"checkbox\" [disabled]=\"!isManager\" [(ngModel)]=\"editUser.active\"\n                    class=\"form-check-input\">\n                  Acitve <small [hidden]=\"isManager\">(read only)</small>\n                </label>\n              </div>\n              <div class=\"form-check disabled\">\n                <label class=\"form-check-label\">\n                  <input name=\"locked\" type=\"checkbox\" [disabled]=\"!isManager\" [(ngModel)]=\"editUser.notLocked\"\n                    class=\"form-check-input\">\n                  Unlocked <small [hidden]=\"isManager\">(read only)</small>\n                </label>\n              </div>\n            </fieldset>\n          </form>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" id=\"closeEditUserModalButton\">Close</button>\n        <button type=\"button\" (click)=\"onUpdateUser()\" [disabled]=\"editUserForm.invalid || !isAdminOrManager\" class=\"btn btn-primary\">Save changes</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- modal edit user -->\n<div class=\"modal draggable fade bd-example-modal-lg\" id=\"editUserModal\" tabindex=\"-1\"\nrole=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n<div class=\"modal-dialog\" role=\"document\">\n  <div class=\"modal-content\">\n    <div class=\"modal-header\">\n      <h5 class=\"modal-title text-center\">Edit {{editUser?.firstName}}\n        {{editUser?.lastName}}</h5>\n      <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"\">\n        <form #editUserForm=\"ngForm\">\n          <div class=\"form-group\">\n            <label for=\"firstName\">First Name</label>\n            <input type=\"text\" name=\"firstName\" required\n              [(ngModel)]=\"editUser.firstName\" class=\"form-control\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"lastName\">Last Name</label>\n            <input type=\"text\" name=\"lastName\" required\n              [(ngModel)]=\"editUser.lastName\" class=\"form-control\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"username\">Username</label>\n            <input type=\"text\" name=\"username\" required\n              [(ngModel)]=\"editUser.username\" class=\"form-control\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input type=\"email\" name=\"email\" required [(ngModel)]=\"editUser.email\"\n              class=\"form-control\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"authority\">Role</label>\n              <select name=\"role\" required [(ngModel)]=\"editUser.role\" class=\"form-control\">\n                <option value=\"ROLE_USER\">USER</option>\n                <option value=\"ROLE_HR\">HR</option>\n                <option value=\"ROLE_MANAGER\">MANAGER</option>\n                <option value=\"ROLE_ADMIN\">ADMIN</option>\n                <option value=\"ROLE_SUPER_ADMIN\">SUPER ADMIN</option>\n              </select>\n          </div>\n          <div class=\"input-group mb-2\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\">Profile Picture </span>\n            </div>\n            <div class=\"custom-file\">\n              <input type=\"file\" accept=\"image/*\" name=\"profileImage\"\n                (change)=\"onProfileImageChange($event.target.files[0].name, $event.target.files[0])\"\n                class=\"custom-file-input\">\n              <label class=\"custom-file-label\"><span [hidden]=\"!fileName\">{{fileName}}</span>\n                <span [hidden]=\"fileName\">Choose File</span>\n              </label>\n            </div>\n          </div>\n          <fieldset class=\"form-group\">\n            <div class=\"form-check\">\n              <label class=\"form-check-label\">\n                <input name=\"active\" type=\"checkbox\" [(ngModel)]=\"editUser.active\"\n                  class=\"form-check-input\">\n                Acitve\n              </label>\n            </div>\n            <div class=\"form-check disabled\">\n              <label class=\"form-check-label\">\n                <input name=\"locked\" type=\"checkbox\" [(ngModel)]=\"editUser.notLocked\"\n                  class=\"form-check-input\">\n                Unlocked\n              </label>\n            </div>\n          </fieldset>\n        </form>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" id=\"closeEditUserModalButton\">Close</button>\n      <button type=\"button\" (click)=\"onUpdateUser()\" [disabled]=\"editUserForm.invalid\" class=\"btn btn-primary\">Save changes</button>\n    </div>\n  </div>\n</div>\n</div>\n\n    <!-- profile image change form -->\n  <form enctype=\"multipart/form-data\" style=\"display:none;\">\n      <input type=\"file\"\n        (change)=\"onProfileImageChange($event.target.files[0].name, $event.target.files[0]); onUpdateProfileImage()\"\n       name=\"profile-image-input\" id=\"profile-image-input\" placeholder=\"file\" accept=\"image/*\" />\n  </form>\n\n  </div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:8081'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}