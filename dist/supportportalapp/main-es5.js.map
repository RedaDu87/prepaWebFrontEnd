{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/enum/header-type.enum.ts","webpack:///src/app/enum/notification-type.enum.ts","webpack:///src/app/enum/role.enum.ts","webpack:///src/app/guard/authentication.guard.ts","webpack:///src/app/interceptor/auth.interceptor.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/model/file-upload.status.ts","webpack:///src/app/model/user.ts","webpack:///src/app/notification.module.ts","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/service/authentication.service.ts","webpack:///src/app/service/notification.service.ts","webpack:///src/app/service/user.service.ts","webpack:///src/app/user/user.component.ts","webpack:///src/app/user/user.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","HeaderType","NotificationType","Role","AuthenticationGuard","authenticationService","router","notificationService","next","state","isUserLoggedIn","navigate","notify","ERROR","providedIn","AuthInterceptor","httpRequest","httpHandler","url","includes","host","handle","loadToken","token","getToken","request","clone","setHeaders","Authorization","LoginComponent","subscriptions","navigateByUrl","user","showLoading","push","login","subscribe","response","headers","get","JWT_TOKEN","saveToken","addUserToLocalCache","body","errorResponse","sendErrorNotification","error","message","notificationType","forEach","sub","unsubscribe","onLogin","FileUploadStatus","status","percentage","User","userId","firstName","lastName","username","email","lastLoginDate","lastLoginDateDisplay","joinDate","profileImageUrl","active","notLocked","role","authorities","customNotifierOptions","position","horizontal","distance","vertical","gap","theme","behaviour","autoHide","onClick","onMouseover","showDismissButton","stacking","animations","enabled","show","preset","speed","easing","hide","offset","shift","overlap","NotificationModule","withConfig","RegisterComponent","register","sendNotification","SUCCESS","onRegister","AuthenticationService","http","apiUrl","jwtHelper","post","observe","loggedInUsername","localStorage","removeItem","setItem","JSON","stringify","parse","getItem","decodeToken","isTokenExpired","logOut","NotificationService","notifier","type","UserService","formData","reportProgress","users","profileImage","FormData","append","UserComponent","userService","titleSubject","titleAction$","asObservable","editUser","fileStatus","getUserFromLocalCache","getUsers","title","showNotification","refreshing","addUsersToLocalCache","length","selectedUser","clickButton","fileName","userForm","createUserFormDate","value","addUser","reset","currentUsername","updateUser","updateProfileImage","event","reportUploadProgress","UploadProgress","Math","round","loaded","total","Response","Date","getTime","emailForm","emailAddress","resetPassword","WARNING","deleteUser","searchTerm","results","getUsersFromLocalCache","toLowerCase","indexOf","buttonId","document","getElementById","click","getUserRole","ADMIN","SUPER_ADMIN","isAdmin","MANAGER","isManager","changeTitle","searchUsers","onResetPassword","onUpdateCurrentUser","onLogOut","onAddNewUser","onProfileImageChange","name","$event","target","files","saveNewUser","onUpdateUser","onUpdateProfileImage","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UserComponent } from './user/user.component';\nimport { AuthenticationGuard } from './guard/authentication.guard';\n\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'user/management', component: UserComponent, canActivate: [AuthenticationGuard] },\n  { path: '', redirectTo: '/login', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {}\n","<router-outlet></router-outlet>\n<notifier-container></notifier-container>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthenticationService } from './service/authentication.service';\nimport { UserService } from './service/user.service';\nimport { AuthInterceptor } from './interceptor/auth.interceptor';\nimport { AuthenticationGuard } from './guard/authentication.guard';\nimport { NotificationModule } from './notification.module';\nimport { NotificationService } from './service/notification.service';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UserComponent } from './user/user.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    UserComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    NotificationModule\n  ],\n  providers: [NotificationService, AuthenticationGuard, AuthenticationService, UserService,\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true } ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export enum HeaderType {\r\n  AUTHORIZATION = 'Authorization',\r\n  JWT_TOKEN = 'Jwt-Token'\r\n}\r\n","export enum NotificationType {\r\n  DEFAULT = 'default',\r\n  SUCCESS = 'success',\r\n  ERROR = 'error',\r\n  INFO = 'info',\r\n  WARNING = 'warning'\r\n }\r\n","export enum Role {\r\n  SUPER_ADMIN = 'ROLE_SUPER_ADMIN',\r\n  ADMIN = 'ROLE_ADMIN',\r\n  MANAGER = 'ROLE_MANAGER',\r\n  USER = 'ROLE_USER',\r\n  HR = 'ROLE_HR'\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthenticationService } from '../service/authentication.service';\nimport { NotificationService } from '../service/notification.service';\nimport { NotificationType } from '../enum/notification-type.enum';\n\n@Injectable({providedIn: 'root'})\nexport class AuthenticationGuard implements CanActivate {\n\n  constructor(private authenticationService: AuthenticationService, private router: Router,\n              private notificationService: NotificationService) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    return this.isUserLoggedIn();\n  }\n\n  private isUserLoggedIn(): boolean {\n    if (this.authenticationService.isUserLoggedIn()) {\n      return true;\n    }\n    this.router.navigate(['/login']);\n    this.notificationService.notify(NotificationType.ERROR, `You need to log in to access this page`);\n    return false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../service/authentication.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private authenticationService: AuthenticationService) {}\n\n  intercept(httpRequest: HttpRequest<any>, httpHandler: HttpHandler): Observable<HttpEvent<any>> {\n    if (httpRequest.url.includes(`${this.authenticationService.host}/user/login`)) {\n      return httpHandler.handle(httpRequest);\n    }\n    if (httpRequest.url.includes(`${this.authenticationService.host}/user/register`)) {\n      return httpHandler.handle(httpRequest);\n    }\n    this.authenticationService.loadToken();\n    const token = this.authenticationService.getToken();\n    const request = httpRequest.clone({ setHeaders: { Authorization: `Bearer ${token}` }});\n    return httpHandler.handle(request);\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Subscription } from 'rxjs';\nimport { AuthenticationService } from '../service/authentication.service';\nimport { NotificationService } from '../service/notification.service';\nimport { User } from '../model/user';\nimport { NotificationType } from '../enum/notification-type.enum';\nimport { HeaderType } from '../enum/header-type.enum';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  public showLoading: boolean;\n  private subscriptions: Subscription[] = [];\n\n  constructor(private router: Router, private authenticationService: AuthenticationService,\n              private notificationService: NotificationService) {}\n\n  ngOnInit(): void {\n    if (this.authenticationService.isUserLoggedIn()) {\n      this.router.navigateByUrl('/user/management');\n    } else {\n      this.router.navigateByUrl('/login');\n    }\n  }\n\n  public onLogin(user: User): void {\n    this.showLoading = true;\n    this.subscriptions.push(\n      this.authenticationService.login(user).subscribe(\n        (response: HttpResponse<User>) => {\n          const token = response.headers.get(HeaderType.JWT_TOKEN);\n          this.authenticationService.saveToken(token);\n          this.authenticationService.addUserToLocalCache(response.body);\n          this.router.navigateByUrl('/user/management');\n          this.showLoading = false;\n        },\n        (errorResponse: HttpErrorResponse) => {\n          this.sendErrorNotification(NotificationType.ERROR, errorResponse.error.message);\n          this.showLoading = false;\n        }\n      )\n    );\n  }\n\n  private sendErrorNotification(notificationType: NotificationType, message: string): void {\n    if (message) {\n      this.notificationService.notify(notificationType, message);\n    } else {\n      this.notificationService.notify(notificationType, 'An error occurred. Please try again.');\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n}\n","\n<div class=\"container\" style=\"margin-top: 100px;\">\n  <div class=\"d-flex justify-content-center h-50\">\n      <div class=\"user_card\">\n        <div class=\"d-flex justify-content-center\">\n          <div style=\"margin-top: 10px;margin-bottom:-90px;\">\n            <h3>User Management Portal</h3>\n          </div>\n        </div>\n        <div class=\"d-flex justify-content-center form_container\">\n          <form #loginForm=\"ngForm\" (ngSubmit)=\"onLogin(loginForm.value)\">\n            <div class=\"input-group mb-3\">\n              <div class=\"input-group-append\">\n                <span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n              </div>\n              <input type=\"text\" class=\"form-control\" name=\"username\" placeholder=\"Username\" ngModel\n              #usernameInput=\"ngModel\" required>\n            </div>\n            <span class=\"help-block\" style=\"color:red;\"\n            *ngIf=\"usernameInput.invalid && usernameInput.touched\">Please enter a username</span>\n            <div class=\"input-group mb-2\">\n              <div class=\"input-group-append\">\n                <span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\n              </div>\n              <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\"\n              ngModel\n              #passwordInput=\"ngModel\" required>\n            </div>\n            <span class=\"help-block\" style=\"color:red;\"\n            *ngIf=\"passwordInput.invalid && passwordInput.touched\">Please enter a password.</span>\n        <div class=\"d-flex justify-content-center mt-3 login_container\">\n          <button type=\"submit\" [disabled]=\"loginForm.invalid || showLoading\" name=\"button\" class=\"btn login_btn\">\n            <i *ngIf=\"showLoading\" class=\"fas fa-spinner fa-spin\"></i>&nbsp;&nbsp;\n            <span *ngIf=\"showLoading\">Loading...</span>\n            <span *ngIf=\"!showLoading\">Login</span>\n          </button>\n        </div>\n      </form>\n    </div>\n        <div class=\"mt-4\">\n          <div class=\"d-flex justify-content-center links\">\n            Don't have an account? <a routerLink=\"/register\" class=\"ml-2\" style=\"color: #2C3E50;\">Sign Up</a>\n          </div>\n        </div>\n      </div>\n    </div>\n</div>\n\n\n","export class FileUploadStatus {\r\n  public status: string;\r\n  public  percentage: number;\r\n\r\n  constructor() {\r\n    this.status = '';\r\n    this.percentage = 0;\r\n  }\r\n}\r\n","export class User {\r\n  public userId: string;\r\n  public firstName: string;\r\n  public lastName: string;\r\n  public username: string;\r\n  public email: string;\r\n  public lastLoginDate: Date;\r\n  public lastLoginDateDisplay: Date;\r\n  public joinDate: Date;\r\n  public profileImageUrl: string;\r\n  public active: boolean;\r\n  public notLocked: boolean;\r\n  public role: string;\r\n  public authorities: [];\r\n\r\n  constructor() {\r\n    this.userId = '';\r\n    this.firstName = '';\r\n    this.lastName = '';\r\n    this.username = '';\r\n    this.email = '';\r\n    this.lastLoginDate = null;\r\n    this.lastLoginDateDisplay = null;\r\n    this.joinDate = null;\r\n    this.profileImageUrl = '';\r\n    this.active = false;\r\n    this.notLocked = false;\r\n    this.role = '';\r\n    this.authorities = [];\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NotifierOptions, NotifierModule } from 'angular-notifier';\r\n\r\nconst customNotifierOptions: NotifierOptions = {\r\n    position: {\r\n          horizontal: {\r\n              position: 'left',\r\n              distance: 150\r\n          },\r\n          vertical: {\r\n              position: 'top',\r\n              distance: 12,\r\n              gap: 10\r\n          }\r\n      },\r\n    theme: 'material',\r\n    behaviour: {\r\n      autoHide: 5000,\r\n      onClick: 'hide',\r\n      onMouseover: 'pauseAutoHide',\r\n      showDismissButton: true,\r\n      stacking: 4\r\n    },\r\n    animations: {\r\n      enabled: true,\r\n      show: {\r\n        preset: 'slide',\r\n        speed: 300,\r\n        easing: 'ease'\r\n      },\r\n      hide: {\r\n        preset: 'fade',\r\n        speed: 300,\r\n        easing: 'ease',\r\n        offset: 50\r\n      },\r\n      shift: {\r\n        speed: 300,\r\n        easing: 'ease'\r\n      },\r\n      overlap: 150\r\n    }\r\n  };\r\n\r\n@NgModule({\r\n  imports: [NotifierModule.withConfig(customNotifierOptions)],\r\n  exports: [NotifierModule]\r\n})\r\nexport class NotificationModule {}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Subscription } from 'rxjs';\nimport { AuthenticationService } from '../service/authentication.service';\nimport { NotificationService } from '../service/notification.service';\nimport { User } from '../model/user';\nimport { NotificationType } from '../enum/notification-type.enum';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n  public showLoading: boolean;\n  private subscriptions: Subscription[] = [];\n\n  constructor(private router: Router, private authenticationService: AuthenticationService,\n              private notificationService: NotificationService) {}\n\n  ngOnInit(): void {\n    if (this.authenticationService.isUserLoggedIn()) {\n      this.router.navigateByUrl('/user/management');\n    }\n  }\n\n  public onRegister(user: User): void {\n    this.showLoading = true;\n    this.subscriptions.push(\n      this.authenticationService.register(user).subscribe(\n        (response: User) => {\n          this.showLoading = false;\n          this.sendNotification(NotificationType.SUCCESS, `A new account was created for ${response.firstName}.\n          Please check your email for password to log in.`);\n        },\n        (errorResponse: HttpErrorResponse) => {\n          this.sendNotification(NotificationType.ERROR, errorResponse.error.message);\n          this.showLoading = false;\n        }\n      )\n    );\n  }\n\n  private sendNotification(notificationType: NotificationType, message: string): void {\n    if (message) {\n      this.notificationService.notify(notificationType, message);\n    } else {\n      this.notificationService.notify(notificationType, 'An error occurred. Please try again.');\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n}\n","<div class=\"container\" style=\"margin-top: 100px;\">\n  <div class=\"d-flex justify-content-center h-50\">\n      <div class=\"user_card\">\n        <div class=\"d-flex justify-content-center\">\n          <div style=\"margin-top: 10px;margin-bottom:-90px;\">\n            <h3>User Management Portal</h3>\n          </div>\n        </div>\n        <div class=\"d-flex justify-content-center form_container\">\n          <form #registerForm=\"ngForm\" (ngSubmit)=\"onRegister(registerForm.value)\">\n            <div class=\"input-group mb-3\">\n              <div class=\"input-group-append\">\n                <span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n              </div>\n              <input type=\"text\" class=\"form-control\" name=\"firstName\" placeholder=\"First name\" required ngModel #firstNameInput=\"ngModel\">\n            </div>\n            <span class=\"help-block\" *ngIf=\"firstNameInput.invalid && firstNameInput.touched\" style=\"color:red;\">Please enter a first name</span>\n            <div class=\"input-group mb-3\">\n              <div class=\"input-group-append\">\n                <span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n              </div>\n              <input type=\"text\" class=\"form-control\" name=\"lastName\" placeholder=\"Last name\" required ngModel #lastNameInput=\"ngModel\">\n            </div>\n            <span class=\"help-block\" *ngIf=\"lastNameInput.invalid && lastNameInput.touched\" style=\"color:red;\">Please enter a last name</span>\n            <div class=\"input-group mb-3\">\n              <div class=\"input-group-append\">\n                <span class=\"input-group-text\"><i class=\"fas fa-id-card\"></i></span>\n              </div>\n              <input type=\"text\" class=\"form-control\" name=\"username\" placeholder=\"Username\" required ngModel #usernameInput=\"ngModel\">\n            </div>\n            <span class=\"help-block\" *ngIf=\"usernameInput.invalid && usernameInput.touched\" style=\"color:red;\">Please enter a username</span>\n            <div class=\"input-group mb-2\">\n              <div class=\"input-group-append\">\n                <span class=\"input-group-text\"><i class=\"fas fa-envelope\"></i></span>\n              </div>\n              <input type=\"text\" class=\"form-control\" name=\"email\" placeholder=\"Email\" required ngModel #emailInput=\"ngModel\">\n            </div>\n            <span class=\"help-block\" *ngIf=\"emailInput.invalid && emailInput.touched\" style=\"color:red;\">Please enter an email.</span>\n        <div class=\"d-flex justify-content-center mt-3 login_container\">\n          <button [disabled]=\"registerForm.invalid || showLoading\" type=\"submit\" name=\"button\" class=\"btn login_btn\">\n            <i *ngIf=\"showLoading\" class=\"fas fa-spinner fa-spin\"></i>&nbsp;&nbsp;\n            <span *ngIf=\"showLoading\">Loading...</span>\n            <span *ngIf=\"!showLoading\">Register</span>\n          </button>\n        </div>\n      </form>\n    </div>\n        <div class=\"mt-4\">\n          <div class=\"d-flex justify-content-center links\">\n            Already have an account? <a routerLink=\"/login\"  class=\"ml-2\" style=\"color: #2C3E50;\">Log In</a>\n          </div>\n        </div>\n      </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { User } from '../model/user';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n\n@Injectable({providedIn: 'root'})\nexport class AuthenticationService {\n  public host = environment.apiUrl;\n  private token: string;\n  private loggedInUsername: string;\n  private jwtHelper = new JwtHelperService();\n\n  constructor(private http: HttpClient) {}\n\n  public login(user: User): Observable<HttpResponse<User>> {\n    return this.http.post<User>(`${this.host}/user/login`, user, { observe: 'response' });\n  }\n\n  public register(user: User): Observable<User> {\n    return this.http.post<User>(`${this.host}/user/register`, user);\n  }\n\n  public logOut(): void {\n    this.token = null;\n    this.loggedInUsername = null;\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    localStorage.removeItem('users');\n  }\n\n  public saveToken(token: string): void {\n    this.token = token;\n    localStorage.setItem('token', token);\n  }\n\n  public addUserToLocalCache(user: User): void {\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n\n  public getUserFromLocalCache(): User {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n\n  public loadToken(): void {\n    this.token = localStorage.getItem('token');\n  }\n\n  public getToken(): string {\n    return this.token;\n  }\n\n  public isUserLoggedIn(): boolean {\n    this.loadToken();\n    if (this.token != null && this.token !== ''){\n      if (this.jwtHelper.decodeToken(this.token).sub != null || '') {\n        if (!this.jwtHelper.isTokenExpired(this.token)) {\n          this.loggedInUsername = this.jwtHelper.decodeToken(this.token).sub;\n          return true;\n        }\n      }\n    } else {\n      this.logOut();\n      return false;\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { NotifierService } from 'angular-notifier';\nimport { NotificationType } from '../enum/notification-type.enum';\n\n@Injectable({providedIn: 'root'})\nexport class NotificationService {\n\n  constructor(private notifier: NotifierService) {}\n\n  public notify(type: NotificationType, message: string) {\n    this.notifier.notify(type, message);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse, HttpErrorResponse, HttpEvent } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { User } from '../model/user';\nimport { CustomHttpRespone } from '../model/custom-http-response';\n\n@Injectable({providedIn: 'root'})\nexport class UserService {\n  private host = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  public getUsers(): Observable<User[]> {\n    return this.http.get<User[]>(`${this.host}/user/list`);\n  }\n\n  public addUser(formData: FormData): Observable<User> {\n    return this.http.post<User>(`${this.host}/user/add`, formData);\n  }\n\n  public updateUser(formData: FormData): Observable<User> {\n    return this.http.post<User>(`${this.host}/user/update`, formData);\n  }\n\n  public resetPassword(email: string): Observable<CustomHttpRespone> {\n    return this.http.get<CustomHttpRespone>(`${this.host}/user/resetpassword/${email}`);\n  }\n\n  public updateProfileImage(formData: FormData): Observable<HttpEvent<User>> {\n    return this.http.post<User>(`${this.host}/user/updateProfileImage`, formData,\n    {reportProgress: true,\n      observe: 'events'\n    });\n  }\n\n  public deleteUser(username: string): Observable<CustomHttpRespone> {\n    return this.http.delete<CustomHttpRespone>(`${this.host}/user/delete/${username}`);\n  }\n\n  public addUsersToLocalCache(users: User[]): void {\n    localStorage.setItem('users', JSON.stringify(users));\n  }\n\n  public getUsersFromLocalCache(): User[] {\n    if (localStorage.getItem('users')) {\n        return JSON.parse(localStorage.getItem('users'));\n    }\n    return null;\n  }\n\n  public createUserFormDate(loggedInUsername: string, user: User, profileImage: File): FormData {\n    const formData = new FormData();\n    formData.append('currentUsername', loggedInUsername);\n    formData.append('firstName', user.firstName);\n    formData.append('lastName', user.lastName);\n    formData.append('username', user.username);\n    formData.append('email', user.email);\n    formData.append('role', user.role);\n    formData.append('profileImage', profileImage);\n    formData.append('isActive', JSON.stringify(user.active));\n    formData.append('isNonLocked', JSON.stringify(user.notLocked));\n    return formData;\n  }\n\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { User } from '../model/user';\nimport { UserService } from '../service/user.service';\nimport { NotificationService } from '../service/notification.service';\nimport { NotificationType } from '../enum/notification-type.enum';\nimport { HttpErrorResponse, HttpEvent, HttpEventType } from '@angular/common/http';\nimport { NgForm } from '@angular/forms';\nimport { CustomHttpRespone } from '../model/custom-http-response';\nimport { AuthenticationService } from '../service/authentication.service';\nimport { Router } from '@angular/router';\nimport { FileUploadStatus } from '../model/file-upload.status';\nimport { Role } from '../enum/role.enum';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit, OnDestroy {\n  private titleSubject = new BehaviorSubject<string>('Users');\n  public titleAction$ = this.titleSubject.asObservable();\n  public users: User[];\n  public user: User;\n  public refreshing: boolean;\n  public selectedUser: User;\n  public fileName: string;\n  public profileImage: File;\n  private subscriptions: Subscription[] = [];\n  public editUser = new User();\n  private currentUsername: string;\n  public fileStatus = new FileUploadStatus();\n\n  constructor(private router: Router, private authenticationService: AuthenticationService,\n              private userService: UserService, private notificationService: NotificationService) {}\n\n  ngOnInit(): void {\n    this.user = this.authenticationService.getUserFromLocalCache();\n    this.getUsers(true);\n  }\n\n  public changeTitle(title: string): void {\n    this.titleSubject.next(title);\n  }\n\n  public getUsers(showNotification: boolean): void {\n    this.refreshing = true;\n    this.subscriptions.push(\n      this.userService.getUsers().subscribe(\n        (response: User[]) => {\n          this.userService.addUsersToLocalCache(response);\n          this.users = response;\n          this.refreshing = false;\n          if (showNotification) {\n            this.sendNotification(NotificationType.SUCCESS, `${response.length} user(s) loaded successfully.`);\n          }\n        },\n        (errorResponse: HttpErrorResponse) => {\n          this.sendNotification(NotificationType.ERROR, errorResponse.error.message);\n          this.refreshing = false;\n        }\n      )\n    );\n\n  }\n\n  public onSelectUser(selectedUser: User): void {\n    this.selectedUser = selectedUser;\n    this.clickButton('openUserInfo');\n  }\n\n  public onProfileImageChange(fileName: string, profileImage: File): void {\n    this.fileName =  fileName;\n    this.profileImage = profileImage;\n  }\n\n  public saveNewUser(): void {\n    this.clickButton('new-user-save');\n  }\n\n  public onAddNewUser(userForm: NgForm): void {\n    const formData = this.userService.createUserFormDate(null, userForm.value, this.profileImage);\n    this.subscriptions.push(\n      this.userService.addUser(formData).subscribe(\n        (response: User) => {\n          this.clickButton('new-user-close');\n          this.getUsers(false);\n          this.fileName = null;\n          this.profileImage = null;\n          userForm.reset();\n          this.sendNotification(NotificationType.SUCCESS, `${response.firstName} ${response.lastName} added successfully`);\n        },\n        (errorResponse: HttpErrorResponse) => {\n          this.sendNotification(NotificationType.ERROR, errorResponse.error.message);\n          this.profileImage = null;\n        }\n      )\n      );\n  }\n\n  public onUpdateUser(): void {\n    const formData = this.userService.createUserFormDate(this.currentUsername, this.editUser, this.profileImage);\n    this.subscriptions.push(\n      this.userService.updateUser(formData).subscribe(\n        (response: User) => {\n          this.clickButton('closeEditUserModalButton');\n          this.getUsers(false);\n          this.fileName = null;\n          this.profileImage = null;\n          this.sendNotification(NotificationType.SUCCESS, `${response.firstName} ${response.lastName} updated successfully`);\n        },\n        (errorResponse: HttpErrorResponse) => {\n          this.sendNotification(NotificationType.ERROR, errorResponse.error.message);\n          this.profileImage = null;\n        }\n      )\n      );\n  }\n\n  public onUpdateCurrentUser(user: User): void {\n    this.refreshing = true;\n    this.currentUsername = this.authenticationService.getUserFromLocalCache().username;\n    const formData = this.userService.createUserFormDate(this.currentUsername, user, this.profileImage);\n    this.subscriptions.push(\n      this.userService.updateUser(formData).subscribe(\n        (response: User) => {\n          this.authenticationService.addUserToLocalCache(response);\n          this.getUsers(false);\n          this.fileName = null;\n          this.profileImage = null;\n          this.sendNotification(NotificationType.SUCCESS, `${response.firstName} ${response.lastName} updated successfully`);\n        },\n        (errorResponse: HttpErrorResponse) => {\n          this.sendNotification(NotificationType.ERROR, errorResponse.error.message);\n          this.refreshing = false;\n          this.profileImage = null;\n        }\n      )\n      );\n  }\n\n  public onUpdateProfileImage(): void {\n    const formData = new FormData();\n    formData.append('username', this.user.username);\n    formData.append('profileImage', this.profileImage);\n    this.subscriptions.push(\n      this.userService.updateProfileImage(formData).subscribe(\n        (event: HttpEvent<any>) => {\n          this.reportUploadProgress(event);\n        },\n        (errorResponse: HttpErrorResponse) => {\n          this.sendNotification(NotificationType.ERROR, errorResponse.error.message);\n          this.fileStatus.status = 'done';\n        }\n      )\n    );\n  }\n\n  private reportUploadProgress(event: HttpEvent<any>): void {\n    switch (event.type) {\n      case HttpEventType.UploadProgress:\n        this.fileStatus.percentage = Math.round(100 * event.loaded / event.total);\n        this.fileStatus.status = 'progress';\n        break;\n      case HttpEventType.Response:\n        if (event.status === 200) {\n          this.user.profileImageUrl = `${event.body.profileImageUrl}?time=${new Date().getTime()}`;\n          this.sendNotification(NotificationType.SUCCESS, `${event.body.firstName}\\'s profile image updated successfully`);\n          this.fileStatus.status = 'done';\n          break;\n        } else {\n          this.sendNotification(NotificationType.ERROR, `Unable to upload image. Please try again`);\n          break;\n        }\n      default:\n        `Finished all processes`;\n    }\n  }\n\n  public updateProfileImage(): void {\n    this.clickButton('profile-image-input');\n  }\n\n  public onLogOut(): void {\n    this.authenticationService.logOut();\n    this.router.navigate(['/login']);\n    this.sendNotification(NotificationType.SUCCESS, `You've been successfully logged out`);\n  }\n\n  public onResetPassword(emailForm: NgForm): void {\n    this.refreshing = true;\n    const emailAddress = emailForm.value['reset-password-email'];\n    this.subscriptions.push(\n      this.userService.resetPassword(emailAddress).subscribe(\n        (response: CustomHttpRespone) => {\n          this.sendNotification(NotificationType.SUCCESS, response.message);\n          this.refreshing = false;\n        },\n        (error: HttpErrorResponse) => {\n          this.sendNotification(NotificationType.WARNING, error.error.message);\n          this.refreshing = false;\n        },\n        () => emailForm.reset()\n      )\n    );\n  }\n\n  public onDeleteUder(username: string): void {\n    this.subscriptions.push(\n      this.userService.deleteUser(username).subscribe(\n        (response: CustomHttpRespone) => {\n          this.sendNotification(NotificationType.SUCCESS, response.message);\n          this.getUsers(false);\n        },\n        (error: HttpErrorResponse) => {\n          this.sendNotification(NotificationType.ERROR, error.error.message);\n        }\n      )\n    );\n  }\n\n  public onEditUser(editUser: User): void {\n    this.editUser = editUser;\n    this.currentUsername = editUser.username;\n    this.clickButton('openUserEdit');\n  }\n\n  public searchUsers(searchTerm: string): void {\n    const results: User[] = [];\n    for (const user of this.userService.getUsersFromLocalCache()) {\n      if (user.firstName.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1 ||\n          user.lastName.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1 ||\n          user.username.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1 ||\n          user.userId.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1) {\n          results.push(user);\n      }\n    }\n    this.users = results;\n    if (results.length === 0 || !searchTerm) {\n      this.users = this.userService.getUsersFromLocalCache();\n    }\n  }\n\n  public get isAdmin(): boolean {\n    return this.getUserRole() === Role.ADMIN || this.getUserRole() === Role.SUPER_ADMIN;\n  }\n\n  public get isManager(): boolean {\n    return this.isAdmin || this.getUserRole() === Role.MANAGER;\n  }\n\n  public get isAdminOrManager(): boolean {\n    return this.isAdmin || this.isManager;\n  }\n\n  private getUserRole(): string {\n    return this.authenticationService.getUserFromLocalCache().role;\n  }\n\n  private sendNotification(notificationType: NotificationType, message: string): void {\n    if (message) {\n      this.notificationService.notify(notificationType, message);\n    } else {\n      this.notificationService.notify(notificationType, 'An error occurred. Please try again.');\n    }\n  }\n\n  private clickButton(buttonId: string): void {\n    document.getElementById(buttonId).click();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row mb-2 mt-2 text-center\">\n    <div class=\"col-md-4\">\n    </div>\n    <div class=\"col-md-4\">\n      <h5>User Management Portal</h5>\n      <small *ngIf=\"titleAction$ | async as title\">{{ title }}</small>\n    </div>\n    <div class=\"col-md-4\">\n    </div>\n  </div>\n\n  <!-- nav bar -->\n  <nav class=\"navbar navbar-expand-md breadcrumb\">\n    <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n      <div class=\"nav nav-pills\">\n        <a class=\"nav-item nav-link active ml-1\" (click)=\"changeTitle('Users')\" data-toggle=\"tab\" href=\"#users\">\n          <i class=\"fa fa-users\"></i>\n          Users\n        </a>\n        <a [hidden]=\"!isAdmin\" class=\"nav-item nav-link ml-3\" (click)=\"changeTitle('Settings')\" data-toggle=\"tab\" href=\"#reset-password\">\n          <i class=\"fa fa-cogs\"></i>\n          Settings\n        </a>\n        <a class=\"nav-item nav-link move-right mr-3\" (click)=\"changeTitle('Profile')\" data-toggle=\"tab\" href=\"#profile\">\n          Welcome, {{user?.firstName}}\n          <i class=\"fa fa-user\"></i>\n        </a>\n      </div>\n    </div>\n  </nav>\n\n  <!-- main content -->\n  <div class=\"tab-content mt-3\" id=\"myTabContent\">\n    <!-- user table -->\n    <div class=\"tab-pane fade show active\" id=\"users\">\n      <div class=\"mb-3 float-right\">\n        <div class=\"btn-group mr-2\">\n          <form class=\"form-inline my-2 my-lg-0 justify-content-center\">\n            <input name=\"searchTerm\" #searchInput=\"ngModel\" class=\"form-control mr-sm-2\" ngModel\n            (ngModelChange)=\"searchUsers(searchInput.value)\" type=\"search\" placeholder=\"Search users...\">\n         </form>\n          <button [hidden]=\"!isAdmin\" type=\"button\" class=\"btn btn-info\" data-toggle=\"modal\" data-target=\"#addUserModal\">\n            <i class=\"fa fa-plus\"></i>New User\n          </button>\n        </div>\n        <div class=\"btn-group\">\n          <button type=\"button\" (click)=\"getUsers(true)\" class=\"btn btn-info\">\n            <i *ngIf=\"refreshing\" class=\"fas fa-sync fa-spin\"></i><i *ngIf=\"!refreshing\" class=\"fas fa-sync\"></i>\n          </button>\n        </div>\n      </div>\n      <table class=\"table table-hover\">\n        <thead class=\"table-borderless\">\n          <tr class=\"text-center\">\n            <th>Photo</th>\n            <th>User ID</th>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Username</th>\n            <th>Email</th>\n            <th>Status</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody *ngFor=\"let appUser of users\">\n          <tr class=\"text-center\">\n            <td (click)=\"onSelectUser(appUser)\">\n              <img height=\"40\" width=\"40\" src=\"{{appUser?.profileImageUrl}}\" class=\"rounded-circle img-fluid img-thumbnail\" alt=\"\"/>\n            </td>\n            <td (click)=\"onSelectUser(appUser)\">{{appUser?.userId}}</td>\n            <td (click)=\"onSelectUser(appUser)\">{{appUser?.firstName}}</td>\n            <td (click)=\"onSelectUser(appUser)\">{{appUser?.lastName}}</td>\n            <td (click)=\"onSelectUser(appUser)\">{{appUser?.username}}</td>\n            <td (click)=\"onSelectUser(appUser)\">{{appUser?.email}}</td>\n            <td (click)=\"onSelectUser(appUser)\">\n              <span [hidden]=\"!appUser?.active\" class=\"badge badge-success\">Active</span>\n              <span [hidden]=\"appUser?.active\" class=\"badge badge-danger\">Inactive</span>\n            </td>\n            <td class=\"\">\n              <div class=\"btn-group\">\n                <button class=\"btn btn-outline-info\" (click)=\"onEditUser(appUser)\"><i class=\"fas fa-edit\"></i></button>\n                <button [hidden]=\"!isAdmin\" class=\"btn btn-outline-danger\" (click)=\"onDeleteUder(appUser?.username)\"><i class=\"fas fa-trash\"></i></button>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <button [hidden]=\"true\" type=\"button\" id=\"openUserInfo\" data-toggle=\"modal\" data-target=\"#viewUserModal\">\n    </button>\n    <button [hidden]=\"true\" type=\"button\" id=\"openUserEdit\" data-toggle=\"modal\" data-target=\"#editUserModal\">\n    </button>\n\n    <!-- change password  -->\n    <div [hidden]=\"!isAdmin\" class=\"tab-pane fade\" id=\"reset-password\">\n      <form #resetPasswordForm=\"ngForm\" (ngSubmit)=\"onResetPassword(resetPasswordForm)\">\n        <fieldset>\n          <legend>User Password Management</legend>\n          <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\">Email address</label>\n            <input type=\"email\" name=\"reset-password-email\" required ngModel class=\"form-control\"\n              placeholder=\"Enter email (example@email.com)\">\n            <small class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n          </div>\n          <button type=\"submit\" [disabled]=\"resetPasswordForm.invalid\" class=\"btn btn-primary\">\n            <i *ngIf=\"refreshing\" class=\"fas fa-spinner fa-spin\"></i>&nbsp;&nbsp;\n            <span *ngIf=\"refreshing\">Loading...</span>\n            <span *ngIf=\"!refreshing\">Reset Password</span>\n          </button>\n        </fieldset>\n      </form>\n    </div>\n\n    <!-- user profile -->\n    <div class=\"tab-pane fade\" id=\"profile\">\n      <div class=\"container\">\n        <div class=\"row flex-lg-nowrap\">\n          <div class=\"col\">\n            <div class=\"row\">\n              <div class=\"col mb-3\">\n                <div class=\"card\">\n                  <div class=\"card-body\">\n                    <div class=\"e-profile\">\n                      <div class=\"row\">\n                        <div class=\"col-12 col-sm-auto\">\n                          <div class=\"mx-auto\" style=\"width: 120px;\">\n                            <div class=\"d-flex justify-content-center align-items-center rounded\">\n                              <img class=\"rounded\" height=\"135\" width=\"135\" src=\"{{user?.profileImageUrl}}\" alt=\"\">\n                            </div>\n                            <div *ngIf=\"fileStatus?.status==='progress'\" class=\"progress mt-1\">\n                              <div class=\"progress-bar bg-info\" role=\"progressbar\"\n                                [style.width.%]=\"fileStatus?.percentage\" aria-valuenow=\"0\" aria-valuemin=\"0\"\n                                aria-valuemax=\"100\">{{fileStatus?.percentage}}%</div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col d-flex flex-column flex-sm-row justify-content-between mb-3\">\n                          <div class=\"text-center text-sm-left mb-2 mb-sm-0\">\n                            <h4 class=\"pt-sm-2 pb-1 mb-0 text-nowrap\">{{user?.firstName}} {{user?.lastName}}</h4>\n                            <p class=\"mb-0\">{{user?.username}}</p>\n                            <div *ngIf=\"user?.lastLoginDateDisplay !== null\" class=\"text-muted\"><small>Last login:\n                                {{user?.lastLoginDateDisplay | date:'medium'}}</small></div>\n                            <div class=\"mt-2\">\n                              <button (click)=\"updateProfileImage()\" class=\"btn btn-primary\" type=\"button\">\n                                <i class=\"fa fa-fw fa-camera\"></i>\n                                <span>Change Photo</span>\n                              </button>\n                            </div>\n                          </div>\n                          <div class=\"text-center text-sm-right\">\n                            <div class=\"text-muted\"><small>Joined {{user?.joinDate | date:'mediumDate'}}</small></div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"tab-content pt-3\">\n                        <div class=\"tab-pane active\">\n                          <form #profileUserForm=\"ngForm\" (ngSubmit)=\"onUpdateCurrentUser(profileUserForm.value)\" class=\"form\"\n                            novalidate>\n                            <div class=\"row\">\n                              <div class=\"col\">\n                                <div class=\"row\">\n                                  <div class=\"col\">\n                                    <div class=\"form-group\">\n                                      <label>First Name</label>\n                                      <input type=\"text\" name=\"firstName\" required [(ngModel)]=\"user.firstName\"\n                                        class=\"form-control\">\n                                    </div>\n                                  </div>\n                                  <div class=\"col\">\n                                    <div class=\"form-group\">\n                                      <label>Last Name</label>\n                                      <input type=\"text\" name=\"lastName\" required [(ngModel)]=\"user.lastName\"\n                                        class=\"form-control\">\n                                    </div>\n                                  </div>\n                                </div>\n                                <div class=\"row\">\n                                  <div class=\"col\">\n                                    <div class=\"form-group\">\n                                      <label>Username</label>\n                                      <input type=\"text\" name=\"username\" required [(ngModel)]=\"user.username\"\n                                        class=\"form-control\">\n                                    </div>\n                                  </div>\n                                </div>\n                                <div class=\"row\">\n                                  <div class=\"col\">\n                                    <div class=\"form-group\">\n                                      <label>Email</label>\n                                      <input type=\"text\" name=\"email\" required [(ngModel)]=\"user.email\"\n                                        class=\"form-control\">\n                                    </div>\n                                  </div>\n                                </div>\n                                <div class=\"row\">\n                                  <div class=\"col mb-3\">\n                                    <div class=\"form-group\">\n                                      <label>Role</label><small [hidden]=\"isAdmin\">(read only)</small>\n                                      <select name=\"role\" required [(ngModel)]=\"user.role\" class=\"form-control\">\n                                          <option [hidden]=\"!isAdmin\" value=\"ROLE_USER\">USER</option>\n                                          <option [hidden]=\"!isAdmin\" value=\"ROLE_HR\">HR</option>\n                                          <option [hidden]=\"!isAdmin\" value=\"ROLE_MANAGER\">MANAGER</option>\n                                          <option [hidden]=\"!isAdmin\" value=\"ROLE_ADMIN\">ADMIN</option>\n                                          <option [hidden]=\"!isAdmin\" value=\"ROLE_SUPER_ADMIN\">SUPER ADMIN</option>\n                                        </select>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"row\">\n                              <div class=\"col-12 col-sm-5 offset-sm-1 mb-3\">\n                                <div class=\"mb-2\"><b>Account Settings</b></div>\n                                <div class=\"row\">\n                                  <div class=\"col\">\n                                    <div class=\"custom-controls-stacked px-2\">\n                                      <div class=\"custom-control custom-checkbox\">\n                                        <input name=\"active\" type=\"checkbox\" [(ngModel)]=\"user.active\" class=\"custom-control-input\">\n                                        <label class=\"custom-control-label\">Active</label>\n                                      </div>\n                                      <div class=\"custom-control custom-checkbox\">\n                                        <input name=\"notLocked\" type=\"checkbox\"\n                                          [(ngModel)]=\"user.notLocked\" class=\"custom-control-input\">\n                                        <label class=\"custom-control-label\">Unlocked</label>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"row\">\n                              <div class=\"col d-flex justify-content-end\">\n                                <button class=\"btn btn-primary\" type=\"submit\">\n                                  <i *ngIf=\"refreshing\" class=\"fas fa-spinner fa-spin\"></i>&nbsp;&nbsp;\n                                  <span *ngIf=\"refreshing\">Loading...</span>\n                                  <span *ngIf=\"!refreshing\">Save Changes</span>\n                                </button>\n                              </div>\n                            </div>\n                          </form>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-12 col-md-3 mb-3\">\n                <div class=\"card mb-3\">\n                  <div class=\"card-body\">\n                    <div class=\"px-xl-3\">\n                      <button (click)=\"onLogOut()\" class=\"btn btn-block btn-secondary\">\n                        <span>Logout</span>\n                        <i class=\"fas fa-sign-in-alt ml-1\"></i>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"card\">\n                  <div class=\"card-body\">\n                    <h6 class=\"card-title font-weight-bold\">Permissions From Role</h6>\n                    <h6 *ngFor=\"let authority of user?.authorities\" class=\"card-text\">{{authority}}</h6>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- modal user info -->\n    <div class=\"modal fade bd-example-modal-lg\" id=\"viewUserModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"\"\n      aria-hidden=\"true\">\n      <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title text-center\" id=\"exampleModalLongTitle\">{{selectedUser?.firstName}}\n              {{selectedUser?.lastName}}\n            </h5>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            <div>\n              <div class=\"card\">\n                <div class=\"card-body\">\n                  <div class=\"row\">\n                    <div class=\"col-12 col-sm-auto\">\n                      <div class=\"mx-auto\" style=\"width: 120px;\">\n                        <div class=\"d-flex justify-content-center align-items-center rounded\">\n                          <img class=\"rounded\" height=\"120\" width=\"120\" src=\"{{selectedUser?.profileImageUrl}}\" alt=\"{{selectedUser?.firstName}}\">\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col d-flex flex-column flex-sm-row justify-content-between\">\n                      <div class=\"text-center text-sm-left mb-sm-0\">\n                        <h6 class=\"pt-sm-2 pb-1 mb-0 text-nowrap\">{{selectedUser?.firstName}}\n                          {{selectedUser?.lastName}}</h6>\n                        <p class=\"mb-1\">{{selectedUser?.username}}</p>\n                        <div class=\"\">Status:\n                          <span [hidden]=\"!selectedUser?.active\" class=\"badge badge-success\">Active</span>\n                          <span [hidden]=\"selectedUser?.active\" class=\"badge badge-danger\">Inactive</span>\n                        </div>\n                        <div *ngIf=\"selectedUser?.lastLoginDateDisplay\" class=\"text-muted\"><small>Last Login: {{selectedUser?.lastLoginDateDisplay | date: 'medium'}}</small>\n                        </div>\n                      </div>\n                      <div class=\"text-center text-sm-right\">\n                        <div class=\"text-muted\"><small>Joined {{selectedUser?.joinDate | date: 'mediumDate'}}</small></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <ul class=\"list-group list-group-flush\">\n                  <li class=\"list-group-item\"></li>\n                  <li class=\"list-group-item\"><i class=\"fa fa-id-badge float-right\"></i>{{selectedUser?.userId}}\n                  </li>\n                  <li class=\"list-group-item\"><i class=\"fa fa-envelope float-right\"></i>{{selectedUser?.email}}\n                  </li>\n                  <li class=\"list-group-item\"><i class=\"fas fa-shield-alt float-right\"></i>{{selectedUser?.role.substring(5)}}\n                  <li *ngIf=\"selectedUser?.lastLoginDateDisplay\" class=\"list-group-item\"><i\n                      class=\"fas fa-sign-in-alt float-right\"></i>{{selectedUser?.lastLoginDateDisplay | date: 'medium'}}\n                  </li>\n                  <li class=\"list-group-item\">\n                    <span [hidden]=\"selectedUser?.notLocked\">\n                      <i class=\"fa fa-lock float-right\" style=\"color: red;\">\n                      </i>\n                      Account Locked\n                    </span>\n                    <span [hidden]=\"!selectedUser?.notLocked\">\n                      <i class=\"fa fa-unlock float-right\" style=\"color: green;\">\n                      </i>\n                      Account Unlocked\n                    </span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- model add user -->\n    <div [hidden]=\"!isAdmin\" class=\"modal draggable fade bd-example-modal-lg\" id=\"addUserModal\" tabindex=\"-1\" role=\"dialog\"\n      aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n      <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title text-center\">New User</h5>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            <div>\n              <form #newUserForm=\"ngForm\" (ngSubmit)=\"onAddNewUser(newUserForm)\">\n                <div class=\"form-group\">\n                  <label for=\"firstName\">First Name</label>\n                  <input type=\"text\" name=\"firstName\" required ngModel class=\"form-control\">\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"lastName\">Last Name</label>\n                  <input type=\"text\" name=\"lastName\" required ngModel class=\"form-control\">\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"username\">Username</label>\n                  <input type=\"text\" name=\"username\" required ngModel class=\"form-control\">\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"email\">Email</label>\n                  <input type=\"email\" name=\"email\" required ngModel class=\"form-control\">\n                </div>\n                <div *ngIf=\"isAdmin\" class=\"form-group\">\n                  <label for=\"authority\">Role</label>\n                  <select name=\"role\" required ngModel=\"ROLE_USER\" class=\"form-control\">\n                    <option value=\"ROLE_USER\">USER</option>\n                    <option value=\"ROLE_HR\">HR</option>\n                    <option value=\"ROLE_MANAGER\">MANAGER</option>\n                    <option value=\"ROLE_ADMIN\">ADMIN</option>\n                    <option value=\"ROLE_SUPER_ADMIN\">SUPER ADMIN</option>\n                  </select>\n                </div>\n                <div *ngIf=\"!isAdmin\" class=\"form-group\">\n                  <label for=\"authority\">Role</label>\n                  <input type=\"text\" name=\"role\" required ngModel=\"USER\" readonly class=\"form-control\">\n                </div>\n                <div class=\"input-group mb-2\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\">Profile Picture </span>\n                  </div>\n                  <div class=\"custom-file\">\n                    <input type=\"file\" accept=\"image/*\" name=\"profileImage\"\n                    (change)=\"onProfileImageChange($event.target.files[0].name, $event.target.files[0])\"\n                      class=\"custom-file-input\">\n                    <label class=\"custom-file-label\"><span [hidden]=\"!fileName\">{{ fileName }}</span>\n                      <span [hidden]=\"fileName\">Choose File</span>\n                    </label>\n                  </div>\n                </div>\n                <fieldset class=\"form-group\">\n                  <div class=\"form-check\">\n                    <label class=\"form-check-label\">\n                      <input type=\"checkbox\" name=\"active\" ngModel class=\"form-check-input\" >\n                      Acitve\n                    </label>\n                  </div>\n                  <div class=\"form-check disabled\">\n                    <label class=\"form-check-label\">\n                      <input type=\"checkbox\" name=\"notLocked\" ngModel class=\"form-check-input\">\n                      Unlocked\n                    </label>\n                  </div>\n                </fieldset>\n                <button type=\"submit\" style=\"display: none;\" id=\"new-user-save\"></button>\n              </form>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" id=\"new-user-close\">Close</button>\n            <button type=\"button\" (click)=\"saveNewUser()\" [disabled]=\"newUserForm.invalid\" class=\"btn btn-primary\">Save changes</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n     <!-- modal edit user -->\n  <div class=\"modal draggable fade bd-example-modal-lg\" id=\"editUserModal\" tabindex=\"-1\"\n  role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title text-center\">Edit {{editUser?.firstName}}\n          {{editUser?.lastName}} <small [hidden]=\"isAdminOrManager\">\n            (read only)\n          </small></h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"\">\n          <form #editUserForm=\"ngForm\">\n            <div class=\"form-group\">\n              <label for=\"firstName\">First Name</label>\n              <input type=\"text\" name=\"firstName\" [disabled]=\"!isAdminOrManager\" required\n                [(ngModel)]=\"editUser.firstName\" class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n              <label for=\"lastName\">Last Name</label>\n              <input type=\"text\" name=\"lastName\" [disabled]=\"!isAdminOrManager\" required\n                [(ngModel)]=\"editUser.lastName\" class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n              <label for=\"username\">Username</label>\n              <input type=\"text\" name=\"username\" [disabled]=\"!isAdminOrManager\" required\n                [(ngModel)]=\"editUser.username\" class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n              <label for=\"email\">Email</label>\n              <input type=\"email\" name=\"email\" [disabled]=\"!isAdminOrManager\" required [(ngModel)]=\"editUser.email\"\n                class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n              <label for=\"authority\">Role <small [hidden]=\"isAdmin\">(read only)</small></label>\n                <select name=\"role\" [disabled]=\"!isAdmin\" required [(ngModel)]=\"editUser.role\" class=\"form-control\">\n                  <option value=\"ROLE_USER\">USER</option>\n                  <option value=\"ROLE_HR\">HR</option>\n                  <option value=\"ROLE_MANAGER\">MANAGER</option>\n                  <option value=\"ROLE_ADMIN\">ADMIN</option>\n                  <option value=\"ROLE_SUPER_ADMIN\">SUPER ADMIN</option>\n                </select>\n            </div>\n            <div class=\"input-group mb-2\">\n              <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\">Profile Picture </span>\n              </div>\n              <div class=\"custom-file\">\n                <input type=\"file\" accept=\"image/*\" [disabled]=\"!isAdminOrManager\" name=\"profileImage\"\n                  (change)=\"onProfileImageChange($event.target.files[0].name, $event.target.files[0])\"\n                  class=\"custom-file-input\">\n                <label class=\"custom-file-label\"><span [hidden]=\"!fileName\">{{fileName}}</span>\n                  <span [hidden]=\"fileName\">Choose File</span>\n                </label>\n              </div>\n            </div>\n            <fieldset class=\"form-group\">\n              <div class=\"form-check\">\n                <label class=\"form-check-label\">\n                  <input name=\"active\" type=\"checkbox\" [disabled]=\"!isManager\" [(ngModel)]=\"editUser.active\"\n                    class=\"form-check-input\">\n                  Acitve <small [hidden]=\"isManager\">(read only)</small>\n                </label>\n              </div>\n              <div class=\"form-check disabled\">\n                <label class=\"form-check-label\">\n                  <input name=\"locked\" type=\"checkbox\" [disabled]=\"!isManager\" [(ngModel)]=\"editUser.notLocked\"\n                    class=\"form-check-input\">\n                  Unlocked <small [hidden]=\"isManager\">(read only)</small>\n                </label>\n              </div>\n            </fieldset>\n          </form>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" id=\"closeEditUserModalButton\">Close</button>\n        <button type=\"button\" (click)=\"onUpdateUser()\" [disabled]=\"editUserForm.invalid || !isAdminOrManager\" class=\"btn btn-primary\">Save changes</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- modal edit user -->\n<div class=\"modal draggable fade bd-example-modal-lg\" id=\"editUserModal\" tabindex=\"-1\"\nrole=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n<div class=\"modal-dialog\" role=\"document\">\n  <div class=\"modal-content\">\n    <div class=\"modal-header\">\n      <h5 class=\"modal-title text-center\">Edit {{editUser?.firstName}}\n        {{editUser?.lastName}}</h5>\n      <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"\">\n        <form #editUserForm=\"ngForm\">\n          <div class=\"form-group\">\n            <label for=\"firstName\">First Name</label>\n            <input type=\"text\" name=\"firstName\" required\n              [(ngModel)]=\"editUser.firstName\" class=\"form-control\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"lastName\">Last Name</label>\n            <input type=\"text\" name=\"lastName\" required\n              [(ngModel)]=\"editUser.lastName\" class=\"form-control\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"username\">Username</label>\n            <input type=\"text\" name=\"username\" required\n              [(ngModel)]=\"editUser.username\" class=\"form-control\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input type=\"email\" name=\"email\" required [(ngModel)]=\"editUser.email\"\n              class=\"form-control\">\n          </div>\n          <div class=\"form-group\">\n            <label for=\"authority\">Role</label>\n              <select name=\"role\" required [(ngModel)]=\"editUser.role\" class=\"form-control\">\n                <option value=\"ROLE_USER\">USER</option>\n                <option value=\"ROLE_HR\">HR</option>\n                <option value=\"ROLE_MANAGER\">MANAGER</option>\n                <option value=\"ROLE_ADMIN\">ADMIN</option>\n                <option value=\"ROLE_SUPER_ADMIN\">SUPER ADMIN</option>\n              </select>\n          </div>\n          <div class=\"input-group mb-2\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\">Profile Picture </span>\n            </div>\n            <div class=\"custom-file\">\n              <input type=\"file\" accept=\"image/*\" name=\"profileImage\"\n                (change)=\"onProfileImageChange($event.target.files[0].name, $event.target.files[0])\"\n                class=\"custom-file-input\">\n              <label class=\"custom-file-label\"><span [hidden]=\"!fileName\">{{fileName}}</span>\n                <span [hidden]=\"fileName\">Choose File</span>\n              </label>\n            </div>\n          </div>\n          <fieldset class=\"form-group\">\n            <div class=\"form-check\">\n              <label class=\"form-check-label\">\n                <input name=\"active\" type=\"checkbox\" [(ngModel)]=\"editUser.active\"\n                  class=\"form-check-input\">\n                Acitve\n              </label>\n            </div>\n            <div class=\"form-check disabled\">\n              <label class=\"form-check-label\">\n                <input name=\"locked\" type=\"checkbox\" [(ngModel)]=\"editUser.notLocked\"\n                  class=\"form-check-input\">\n                Unlocked\n              </label>\n            </div>\n          </fieldset>\n        </form>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" id=\"closeEditUserModalButton\">Close</button>\n      <button type=\"button\" (click)=\"onUpdateUser()\" [disabled]=\"editUserForm.invalid\" class=\"btn btn-primary\">Save changes</button>\n    </div>\n  </div>\n</div>\n</div>\n\n    <!-- profile image change form -->\n  <form enctype=\"multipart/form-data\" style=\"display:none;\">\n      <input type=\"file\"\n        (change)=\"onProfileImageChange($event.target.files[0].name, $event.target.files[0]); onUpdateProfileImage()\"\n       name=\"profile-image-input\" id=\"profile-image-input\" placeholder=\"file\" accept=\"image/*\" />\n  </form>\n\n  </div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:8081'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}